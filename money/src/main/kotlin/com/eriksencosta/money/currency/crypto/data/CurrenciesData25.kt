/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData25 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "J3ZLNM7HL" to CurrencyData("J3ZLNM7HL", "XT", "XT Token", "XT", "AUXILIARY", 18),
        "J51DTFWQM" to CurrencyData("J51DTFWQM", "OP", "Optimism", "OP", "AUXILIARY", 18),
        "J51DXB76N" to CurrencyData("J51DXB76N", "ATOM", "Cosmos ATOM", "ATOM", "NATIVE", 6),
        "J56NVCVJN" to CurrencyData("J56NVCVJN", "AMXN", "AFREUM MXN", "AMXN", "AUXILIARY", 7),
        "J5J62BBD7" to CurrencyData("J5J62BBD7", "KAVA", "KAVA", "KAVA", "NATIVE", 8),
        "J64P5J1LV" to CurrencyData("J64P5J1LV", "GALA", "Gala", "GALA", "AUXILIARY", 8),
        "J7KQCG93W" to CurrencyData("J7KQCG93W", "1INCH.e", "1INCH Token", "1INCH.e", "AUXILIARY", 18),
        "J7WG2WKPP" to CurrencyData("J7WG2WKPP", "DASH", "Dash Token", "Đ", "AUXILIARY", 6),
        "J7XCTX8HR" to CurrencyData("J7XCTX8HR", "DFI", "DFI", "DFI", "AUXILIARY", 18),
        "J815X0DG2" to CurrencyData("J815X0DG2", "XRP", "XRP Token", "✕", "AUXILIARY", 18),
        "J8P44939W" to CurrencyData("J8P44939W", "BNB", "Binance", "BNB", "AUXILIARY", 18),
        "J91QRKB7J" to CurrencyData("J91QRKB7J", "WFTM", "Wrapped Fantom", "WFTM", "AUXILIARY", 18),
        "J9C7P7QVV" to CurrencyData("J9C7P7QVV", "ATMT", "AFREUM TMT", "ATMT", "AUXILIARY", 7),
        "J9K583ZGG" to CurrencyData("J9K583ZGG", "BCH", "Bitcoin Cash", "Ƀ", "NATIVE", 8),
        "J9TTK24QB" to CurrencyData("J9TTK24QB", "SDJF", "AFREUM STABLE DJF", "SDJF", "AUXILIARY", 7),
        "JBZ9LHZVB" to CurrencyData("JBZ9LHZVB", "GMX", "GMX", "GMX", "AUXILIARY", 18),
        "JC5GK63XK" to CurrencyData("JC5GK63XK", "TRB", "Tellor", "TRB", "AUXILIARY", 18),
        "JCV2KV911" to CurrencyData("JCV2KV911", "SILS", "AFREUM STABLE ILS", "SILS", "AUXILIARY", 7),
        "JDH48C8NK" to CurrencyData("JDH48C8NK", "EUROe", "EUROe Stablecoin", "EUROe", "AUXILIARY", 6),
        "JDNXNJ3NC" to CurrencyData("JDNXNJ3NC", "DOGE", "TOOLY I Am King", "Ð", "AUXILIARY", 9),
        "JFS31GJGD" to CurrencyData("JFS31GJGD", "WBNB", "Wrapped BNB", "WBNB", "AUXILIARY", 18),
        "JG7PX6WWX" to CurrencyData("JG7PX6WWX", "ASSP", "AFREUM SSP", "ASSP", "AUXILIARY", 7),
        "JGGRD0Z4Z" to CurrencyData("JGGRD0Z4Z", "VOW", "Vow", "VOW", "AUXILIARY", 18),
        "JGGW57FD9" to CurrencyData("JGGW57FD9", "WAXP", "WAX", "WAXP", "NATIVE", 8),
        "JGJZPPF7Z" to CurrencyData("JGJZPPF7Z", "USDt", "Tether USD", "USDt", "AUXILIARY", 6),
        "JGNDNLNNX" to CurrencyData("JGNDNLNNX", "CEL", "Celsius", "CEL", "AUXILIARY", 4),
        "JGSQZ3N79" to CurrencyData("JGSQZ3N79", "TONCOIN", "Wrapped TON Coin", "TONCOIN", "AUXILIARY", 9),
        "JH6WSCVP2" to CurrencyData("JH6WSCVP2", "WBTC", "Wrapped Bitcoin", "WBTC", "AUXILIARY", 8),
        "JH9TPZQ38" to CurrencyData("JH9TPZQ38", "THETA", "THETA", "THETA", "AUXILIARY", 4),
        "JHH9RZMC8" to CurrencyData("JHH9RZMC8", "LUNA", "LUNA", "LUNA", "AUXILIARY", 6),
        "JHTSDGP4V" to CurrencyData("JHTSDGP4V", "AGIP", "AFREUM GIP", "AGIP", "AUXILIARY", 7),
        "JHV7ZQXB7" to CurrencyData("JHV7ZQXB7", "STND", "AFREUM STABLE TND", "STND", "AUXILIARY", 7),
        "JJ7D3613J" to CurrencyData("JJ7D3613J", "APT", "Apricot", "APT", "AUXILIARY", 6),
        "JJB4VLPTP" to CurrencyData("JJB4VLPTP", "KAVA", "KAVA", "KAVA", "AUXILIARY", 6),
        "JK3HPFMWD" to CurrencyData("JK3HPFMWD", "SKRW", "AFREUM STABLE KRW", "SKRW", "AUXILIARY", 7),
        "JK58GFSQ5" to CurrencyData("JK58GFSQ5", "MULTI", "Multichain", "MULTI", "AUXILIARY", 18),
        "JK7TNHJC1" to CurrencyData("JK7TNHJC1", "STX", "Stox", "STX", "AUXILIARY", 18),
        "JKJ58KGJT" to CurrencyData("JKJ58KGJT", "WOO", "Wootrade Network", "WOO", "AUXILIARY", 6),
        "JKMF5L4KM" to CurrencyData("JKMF5L4KM", "PENDLE", "Pendle", "PENDLE", "AUXILIARY", 18),
        "JL4TV36QW" to CurrencyData("JL4TV36QW", "FGC", "FantasyGold", "FGC", "AUXILIARY", 18),
        "JLGWL4R1R" to CurrencyData("JLGWL4R1R", "AKWD", "AFREUM KWD", "AKWD", "AUXILIARY", 7),
        "JLTZF0ZGC" to CurrencyData("JLTZF0ZGC", "SMNT", "AFREUM STABLE MNT", "SMNT", "AUXILIARY", 7),
        "JM8NT8P3R" to CurrencyData("JM8NT8P3R", "USDT", "Tether USDt", "₮", "AUXILIARY", 6),
        "JMFSF53SS" to CurrencyData("JMFSF53SS", "SKYD", "AFREUM STABLE KYD", "SKYD", "AUXILIARY", 7),
        "JMPK4V10B" to CurrencyData("JMPK4V10B", "VOLT", "Volt Inu V2", "VOLT", "AUXILIARY", 9),
        "JMRDMZJ79" to CurrencyData("JMRDMZJ79", "1WBTC", "Wrapped BTC", "1WBTC", "AUXILIARY", 8),
        "JMRT1BVFD" to CurrencyData("JMRT1BVFD", "NEST", "NEST", "NEST", "AUXILIARY", 18),
        "JN0CW4MS7" to CurrencyData("JN0CW4MS7", "BAT.e", "Basic Attention Token", "BAT.e", "AUXILIARY", 18),
        "JNF9M0TJG" to CurrencyData("JNF9M0TJG", "AVND", "AFREUM VND", "AVND", "AUXILIARY", 7),
        "JNWL3D02V" to CurrencyData("JNWL3D02V", "XMI", "Microfi Free Flow", "XMI", "AUXILIARY", 2),
    )
}
