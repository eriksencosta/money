/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData13 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "8JHVGRP3L" to CurrencyData("8JHVGRP3L", "MDX", "MDX Token", "MDX", "AUXILIARY", 18),
        "8JLLSWB5P" to CurrencyData("8JLLSWB5P", "SQ", "DAAG Certificat/Tracker Perp SQ Sub", "SQ", "AUXILIARY", 8),
        "8JTDJ95PK" to CurrencyData("8JTDJ95PK", "KNC", "Kyber Network Crystal v2", "KNC", "AUXILIARY", 18),
        "8K1B669GJ" to CurrencyData("8K1B669GJ", "UNI", "Uniswap", "UNI", "AUXILIARY", 18),
        "8KH1M2RC0" to CurrencyData("8KH1M2RC0", "FRAX", "Frax", "FRAX", "AUXILIARY", 18),
        "8KRXNKNK0" to CurrencyData("8KRXNKNK0", "BNX", "BinaryX", "BNX", "AUXILIARY", 18),
        "8M8P2R03R" to CurrencyData("8M8P2R03R", "USDT", "Tether USD", "₮", "AUXILIARY", 6),
        "8NBGRP39C" to CurrencyData("8NBGRP39C", "EOS", "Heco-Peg EOS Token", "ε", "AUXILIARY", 4),
        "8NCX4LRVX" to CurrencyData("8NCX4LRVX", "THETA", "Theta Network", "THETA", "AUXILIARY", 18),
        "8NPJ0FJQ2" to CurrencyData("8NPJ0FJQ2", "XVG", "XVG ERC-20", "XVG", "AUXILIARY", 18),
        "8NV4HKD0F" to CurrencyData("8NV4HKD0F", "USDT", "Tether USD on Fuse", "₮", "AUXILIARY", 6),
        "8P11GW2VS" to CurrencyData("8P11GW2VS", "LDO", "Lido DAO Token", "LDO", "AUXILIARY", 18),
        "8P5XG698D" to CurrencyData("8P5XG698D", "NEST", "NEST", "NEST", "AUXILIARY", 18),
        "8PM931M75" to CurrencyData("8PM931M75", "CGPT", "ChainGPT", "CGPT", "AUXILIARY", 18),
        "8QNZG8Z00" to CurrencyData("8QNZG8Z00", "SWST", "AFREUM STABLE WST", "SWST", "AUXILIARY", 7),
        "8RLZB6XB1" to CurrencyData("8RLZB6XB1", "XETA", "XANA", "XETA", "AUXILIARY", 18),
        "8RSTHL2TT" to CurrencyData("8RSTHL2TT", "IOTA", "IOTA", "IOTA", "AUXILIARY", 18),
        "8RWBNLB84" to CurrencyData("8RWBNLB84", "FRAX", "Frax", "FRAX", "AUXILIARY", 18),
        "8RWJHTS9F" to CurrencyData("8RWJHTS9F", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "8SBB81M2M" to CurrencyData("8SBB81M2M", "LINK", "ChainLink Token", "LINK", "AUXILIARY", 18),
        "8SMN09W3M" to CurrencyData("8SMN09W3M", "AVAX", "Avalanche", "AVAX", "AUXILIARY", 18),
        "8ST3W1LMJ" to CurrencyData("8ST3W1LMJ", "UPUSD", "Universal US Dollar", "UPUSD", "AUXILIARY", 2),
        "8TC2XSJ24" to CurrencyData("8TC2XSJ24", "ICP", "Wrapped ICP", "∞", "PROVISIONAL", 0),
        "8TDXC9JTZ" to CurrencyData("8TDXC9JTZ", "SSHP", "AFREUM STABLE SHP", "SSHP", "AUXILIARY", 7),
        "8TV5N65XS" to CurrencyData("8TV5N65XS", "FRONT", "Frontier", "FRONT", "AUXILIARY", 18),
        "8VX5176BM" to CurrencyData("8VX5176BM", "SBGN", "AFREUM STABLE BGN", "SBGN", "AUXILIARY", 7),
        "8WH8526LF" to CurrencyData("8WH8526LF", "ioUSDT", "Tether USD", "ioUSDT", "AUXILIARY", 6),
        "8WLZGR6DN" to CurrencyData("8WLZGR6DN", "AI", "Sleepless AI Token", "AI", "AUXILIARY", 18),
        "8WV98TJHC" to CurrencyData("8WV98TJHC", "SAFN", "AFREUM STABLE AFN", "SAFN", "AUXILIARY", 7),
        "8XJF67VBF" to CurrencyData("8XJF67VBF", "NAS", "Nebulas", "NAS", "NATIVE", 18),
        "8Z61T54VM" to CurrencyData("8Z61T54VM", "LQTY", "Liquity", "LQTY", "AUXILIARY", 18),
        "8Z8D9H7FB" to CurrencyData("8Z8D9H7FB", "HT", "Huobi Token", "HT", "NATIVE", 18),
        "903W19SSS" to CurrencyData("903W19SSS", "PIVX", "PIVX", "PIVX", "NATIVE", 8),
        "9095DVC42" to CurrencyData("9095DVC42", "GAL", "Project Galaxy", "GAL", "AUXILIARY", 18),
        "90KLX8GQX" to CurrencyData("90KLX8GQX", "SUI", "SUI", "SUI", "NATIVE", 9),
        "90NC1SGCH" to CurrencyData("90NC1SGCH", "SUYU", "AFREUM STABLE UYU", "SUYU", "AUXILIARY", 7),
        "90T0L50HP" to CurrencyData("90T0L50HP", "BAL", "Balancer", "BAL", "AUXILIARY", 18),
        "90ZSVQ1JC" to CurrencyData("90ZSVQ1JC", "METIS", "Metis Andromeda", "METIS", "NATIVE", 8),
        "91D172VTL" to CurrencyData("91D172VTL", "AINR", "AFREUM INR", "AINR", "AUXILIARY", 7),
        "920TF2ZSC" to CurrencyData("920TF2ZSC", "ESCE", "Escroco Emerald", "ESCE", "AUXILIARY", 18),
        "92XJ89RNM" to CurrencyData("92XJ89RNM", "DEGOV2", "dego.finance", "DEGOV2", "AUXILIARY", 18),
        "92Z39ZGTN" to CurrencyData("92Z39ZGTN", "HTX", "HTX", "HTX", "AUXILIARY", 18),
        "935N5X17W" to CurrencyData("935N5X17W", "NVDA", "DAAG Certificat/Tracker Perp NVDA", "NVDA", "AUXILIARY", 8),
        "93GNVXBX2" to CurrencyData("93GNVXBX2", "TKO", "Tokocrypto Token", "TKO", "AUXILIARY", 18),
        "93K9SQP62" to CurrencyData("93K9SQP62", "ARB", "Arbitrum", "ARB", "AUXILIARY", 18),
        "9431G61CB" to CurrencyData("9431G61CB", "PROS", "Prosper", "PROS", "AUXILIARY", 18),
        "943FCHMV1" to CurrencyData("943FCHMV1", "WETH.eth", "Wrapped ETH from Ethereum", "WETH.eth", "AUXILIARY", 18),
        "95LX5122N" to CurrencyData("95LX5122N", "USDC", "USDC via channel 0", "USDC", "AUXILIARY", 6),
        "96K9NX7DV" to CurrencyData("96K9NX7DV", "APAB", "AFREUM PAB", "APAB", "AUXILIARY", 7),
        "986NQK6FQ" to CurrencyData("986NQK6FQ", "RPL", "Rocket Pool", "RPL", "AUXILIARY", 18),
    )
}
