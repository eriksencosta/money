/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData44 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "XKVJ62F6J" to CurrencyData("XKVJ62F6J", "SOL", "Wrapped SOL", "◎", "AUXILIARY", 9),
        "XL7CZMZH5" to CurrencyData("XL7CZMZH5", "EOS", "EOS EVM", "ε", "NATIVE", 7),
        "XLC3G878P" to CurrencyData("XLC3G878P", "MITH", "Mithril Token", "MITH", "AUXILIARY", 18),
        "XLTVK79VS" to CurrencyData("XLTVK79VS", "sUSD", "Synth sUSD", "sUSD", "AUXILIARY", 18),
        "XM3T11M7G" to CurrencyData("XM3T11M7G", "UST", "UST", "UST", "AUXILIARY", 6),
        "XQ5HJF5DW" to CurrencyData("XQ5HJF5DW", "WICC", "Waykichain", "WICC", "NATIVE", 8),
        "XQ7ZQJ7ZP" to CurrencyData("XQ7ZQJ7ZP", "WBTC", "BTC@moonriver", "WBTC", "AUXILIARY", 8),
        "XQCMF0C18" to CurrencyData("XQCMF0C18", "RLY", "Rally", "RLY", "AUXILIARY", 18),
        "XQDQSLNMM" to CurrencyData("XQDQSLNMM", "DAI", "Dai Token", "◈", "AUXILIARY", 18),
        "XQGF4C1L7" to CurrencyData("XQGF4C1L7", "KRW", "KingDeFi", "KRW", "AUXILIARY", 18),
        "XQL6J66WZ" to CurrencyData("XQL6J66WZ", "RSR", "Reserve Rights on xDai", "RSR", "AUXILIARY", 18),
        "XQM2NVXC8" to CurrencyData("XQM2NVXC8", "ABIF", "AFREUM BIF", "ABIF", "AUXILIARY", 7),
        "XR2ZNHXH7" to CurrencyData("XR2ZNHXH7", "W", "Wormhole Token", "W", "AUXILIARY", 18),
        "XRC6968TW" to CurrencyData("XRC6968TW", "TUSD", "TrueUSD", "TUSD", "AUXILIARY", 18),
        "XRFWMCKSC" to CurrencyData("XRFWMCKSC", "ASAR", "AFREUM SAR", "ASAR", "AUXILIARY", 7),
        "XRL18NJLL" to CurrencyData("XRL18NJLL", "L-BTC", "Bitcoin Liquid", "L-BTC", "NATIVE", 8),
        "XSBDRVWXP" to CurrencyData("XSBDRVWXP", "MASK", "Mask Network", "MASK", "AUXILIARY", 18),
        "XSR6FLH09" to CurrencyData("XSR6FLH09", "BNB", "BNB", "BNB", "AUXILIARY", 18),
        "XTHCTZGX8" to CurrencyData("XTHCTZGX8", "RON", "Ronin", "RON", "NATIVE", 8),
        "XTNJ6KQGQ" to CurrencyData("XTNJ6KQGQ", "CH1199021903", "Tenity Group/RegSh CHF0.1", "CH1199021903", "AUXILIARY", 0),
        "XTS66R22W" to CurrencyData("XTS66R22W", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "XVKQD38TJ" to CurrencyData("XVKQD38TJ", "STG", "StargateToken", "STG", "AUXILIARY", 18),
        "XW84Z42P4" to CurrencyData("XW84Z42P4", "KRW", "KROWN", "KRW", "AUXILIARY", 18),
        "XWKSHLKVP" to CurrencyData("XWKSHLKVP", "LUNA", "LUNA", "LUNA", "AUXILIARY", 6),
        "XWTXHV5ZR" to CurrencyData("XWTXHV5ZR", "BABA", "DAAG Certificat/Tracker Perp BABA", "BABA", "AUXILIARY", 8),
        "XX2N89KZK" to CurrencyData("XX2N89KZK", "MODE", "Mode", "MODE", "NATIVE", 18),
        "XX3VQLJT0" to CurrencyData("XX3VQLJT0", "SBHD", "AFREUM STABLE BHD", "SBHD", "AUXILIARY", 7),
        "XXC2TZQRQ" to CurrencyData("XXC2TZQRQ", "MINA", "Mina", "MINA", "NATIVE", 8),
        "XXG4KFCTR" to CurrencyData("XXG4KFCTR", "ORBS", "Orbs", "ORBS", "AUXILIARY", 18),
        "XXP5W33RK" to CurrencyData("XXP5W33RK", "EPX", "Ellipsis X", "EPX", "AUXILIARY", 18),
        "XXS6J1RBG" to CurrencyData("XXS6J1RBG", "DEXE", "Dexe", "DEXE", "AUXILIARY", 18),
        "XZCLWJ82L" to CurrencyData("XZCLWJ82L", "DAI.e", "Dai Stablecoin", "DAI.e", "AUXILIARY", 18),
        "XZFC7H04P" to CurrencyData("XZFC7H04P", "KRTC", "Terra Classic KRW", "KRTC", "AUXILIARY", 6),
        "XZQJDHNPP" to CurrencyData("XZQJDHNPP", "SUSHI", "SushiToken", "SUSHI", "AUXILIARY", 18),
        "XZS87THM0" to CurrencyData("XZS87THM0", "VITE", "Vite", "VITE", "AUXILIARY", 18),
        "Z0221RQ1Q" to CurrencyData("Z0221RQ1Q", "BCN", "BYTECOIN", "BCN", "AUXILIARY", 9),
        "Z0JG8FVNC" to CurrencyData("Z0JG8FVNC", "WTC", "Walton Token", "WTC", "AUXILIARY", 18),
        "Z0N6453RN" to CurrencyData("Z0N6453RN", "CTC", "CyberTronChain", "CTC", "AUXILIARY", 18),
        "Z0QL3ZQ9L" to CurrencyData("Z0QL3ZQ9L", "WETH", "Wrapped Ether", "WETH", "AUXILIARY", 18),
        "Z1VSHS2QX" to CurrencyData("Z1VSHS2QX", "TITAN", "IRON Titanium Token", "TITAN", "AUXILIARY", 18),
        "Z1Z34GC8C" to CurrencyData("Z1Z34GC8C", "RCN", "Ripio Credit Network Token", "RCN", "AUXILIARY", 18),
        "Z2692RWL8" to CurrencyData("Z2692RWL8", "STORJ", "StorjToken", "STORJ", "AUXILIARY", 8),
        "Z2FJWKQ0R" to CurrencyData("Z2FJWKQ0R", "AXS", "Axie Infinity Shard", "AXS", "AUXILIARY", 18),
        "Z3C8VBK52" to CurrencyData("Z3C8VBK52", "ENJ", "Enjin Coin", "ENJ", "AUXILIARY", 18),
        "Z3L8GHQ9F" to CurrencyData("Z3L8GHQ9F", "SOLO", "Sologenic", "SOLO", "AUXILIARY", 15),
        "Z3SN3NVM7" to CurrencyData("Z3SN3NVM7", "QNT", "Quant", "QNT", "AUXILIARY", 18),
        "Z40C149VK" to CurrencyData("Z40C149VK", "FLOKI", "SUPER FLOKI", "FLOKI", "AUXILIARY", 9),
        "Z4J5G29M0" to CurrencyData("Z4J5G29M0", "MULTI", "Multichain", "MULTI", "AUXILIARY", 18),
        "Z4KKP3FDN" to CurrencyData("Z4KKP3FDN", "TURBO", "Turbo", "TURBO", "AUXILIARY", 18),
        "Z4LCRP3TH" to CurrencyData("Z4LCRP3TH", "DOT", "Polkadot Token", "●", "AUXILIARY", 18),
    )
}
