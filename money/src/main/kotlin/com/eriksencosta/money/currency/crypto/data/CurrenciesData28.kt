/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData28 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "KRMN05SQP" to CurrencyData("KRMN05SQP", "SLRD", "AFREUM STABLE LRD", "SLRD", "AUXILIARY", 7),
        "KS1N444VF" to CurrencyData("KS1N444VF", "BEL", "Bella", "BEL", "AUXILIARY", 18),
        "KSS111WBV" to CurrencyData("KSS111WBV", "BNX", "BinaryX", "BNX", "AUXILIARY", 18),
        "KTQ3M1GVP" to CurrencyData("KTQ3M1GVP", "LPT", "Livepeer", "LPT", "AUXILIARY", 18),
        "KVF1031CQ" to CurrencyData("KVF1031CQ", "SENSO", "Sensorium", "SENSO", "AUXILIARY", 0),
        "KVG4QP1P4" to CurrencyData("KVG4QP1P4", "SNOK", "AFREUM STABLE NOK", "SNOK", "AUXILIARY", 7),
        "KVGVFVWK3" to CurrencyData("KVGVFVWK3", "DAR", "Dalarnia", "DAR", "AUXILIARY", 6),
        "KVJ1Q2SCM" to CurrencyData("KVJ1Q2SCM", "AZWL", "AFREUM ZWL", "AZWL", "AUXILIARY", 7),
        "KVPVC7B5M" to CurrencyData("KVPVC7B5M", "EURS", "STASIS EURS Token", "EURS", "AUXILIARY", 2),
        "KWQ4G7CJ8" to CurrencyData("KWQ4G7CJ8", "SJOD", "AFREUM STABLE JOD", "SJOD", "AUXILIARY", 7),
        "KWRMXG9TJ" to CurrencyData("KWRMXG9TJ", "AHKD", "AFREUM HKD", "AHKD", "AUXILIARY", 7),
        "KWW47P1NF" to CurrencyData("KWW47P1NF", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "KX6X7D5ND" to CurrencyData("KX6X7D5ND", "CAKE", "PancakeSwap", "CAKE", "AUXILIARY", 18),
        "KXFW9W7B6" to CurrencyData("KXFW9W7B6", "SNIO", "AFREUM STABLE NIO", "SNIO", "AUXILIARY", 7),
        "L0FM5CT8B" to CurrencyData("L0FM5CT8B", "DAI", "Dai Stablecoin", "◈", "AUXILIARY", 18),
        "L0SDJTMGX" to CurrencyData("L0SDJTMGX", "1USDC", "USD Coin", "1USDC", "AUXILIARY", 6),
        "L138VL6TG" to CurrencyData("L138VL6TG", "UNI", "Uniswap on xDai", "UNI", "AUXILIARY", 18),
        "L18GNGGX2" to CurrencyData("L18GNGGX2", "ROOK", "ROOK", "ROOK", "AUXILIARY", 18),
        "L28Q6KZRZ" to CurrencyData("L28Q6KZRZ", "MICRO", "Micromines", "MICRO", "AUXILIARY", 18),
        "L2BKTJ5WW" to CurrencyData("L2BKTJ5WW", "W", "Wormhole Token", "W", "AUXILIARY", 18),
        "L2PWBK80Z" to CurrencyData("L2PWBK80Z", "UNI.e", "Uniswap", "UNI.e", "AUXILIARY", 18),
        "L2TL6XG45" to CurrencyData("L2TL6XG45", "WETH", "Wrapped Ether", "WETH", "AUXILIARY", 18),
        "L30FLT5HM" to CurrencyData("L30FLT5HM", "JUST", "DAAG Certificat/Tracker Perp JUST", "JUST", "AUXILIARY", 8),
        "L3326R53L" to CurrencyData("L3326R53L", "ONE", "ONE Token", "ONE", "AUXILIARY", 18),
        "L3B80KTH1" to CurrencyData("L3B80KTH1", "AEGP", "AFREUM EGP", "AEGP", "AUXILIARY", 7),
        "L520L9N39" to CurrencyData("L520L9N39", "WETH", "Ethereum Token", "WETH", "AUXILIARY", 8),
        "L59BRGHDW" to CurrencyData("L59BRGHDW", "SXP", "Swipe", "SXP", "AUXILIARY", 8),
        "L5TJKVVGF" to CurrencyData("L5TJKVVGF", "SGB", "Songbird", "SGB", "NATIVE", 18),
        "L6V0QQ9WB" to CurrencyData("L6V0QQ9WB", "ETH", "ETH", "Ξ", "AUXILIARY", 18),
        "L6V4WF308" to CurrencyData("L6V4WF308", "USDC", "USD Coin from Ethereum", "USDC", "AUXILIARY", 6),
        "L7WHMH414" to CurrencyData("L7WHMH414", "RBN", "Ribbon", "RBN", "AUXILIARY", 18),
        "L899KXK97" to CurrencyData("L899KXK97", "SPA", "Sperax", "SPA", "AUXILIARY", 18),
        "L8PVH70D0" to CurrencyData("L8PVH70D0", "ABWP", "AFREUM BWP", "ABWP", "AUXILIARY", 7),
        "L9CD41JMV" to CurrencyData("L9CD41JMV", "AFR", "AFREUM", "AFR", "AUXILIARY", 7),
        "L9CXZ2MSP" to CurrencyData("L9CXZ2MSP", "PROS", "Prosper", "PROS", "AUXILIARY", 18),
        "L9L5XQX5V" to CurrencyData("L9L5XQX5V", "ACE", "ACEToken", "ACE", "AUXILIARY", 18),
        "L9SNQZZC7" to CurrencyData("L9SNQZZC7", "WEVMOS", "Wrapped Evmos", "WEVMOS", "AUXILIARY", 18),
        "LB2MSD4FS" to CurrencyData("LB2MSD4FS", "AMMK", "AFREUM MMK", "AMMK", "AUXILIARY", 7),
        "LB4LXVSTG" to CurrencyData("LB4LXVSTG", "AGHS", "AFREUM GHS", "AGHS", "AUXILIARY", 7),
        "LB80876C2" to CurrencyData("LB80876C2", "SKGS", "AFREUM STABLE KGS", "SKGS", "AUXILIARY", 7),
        "LBD9WTTCR" to CurrencyData("LBD9WTTCR", "CHZ", "Chiliz", "CHZ", "AUXILIARY", 8),
        "LBL9J6X23" to CurrencyData("LBL9J6X23", "BILI", "DAAG Certificat/Tracker Perp BILI", "BILI", "AUXILIARY", 8),
        "LC6XCHBM0" to CurrencyData("LC6XCHBM0", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "LDDNP168V" to CurrencyData("LDDNP168V", "SUZS", "AFREUM STABLE UZS", "SUZS", "AUXILIARY", 7),
        "LFCXG8BR9" to CurrencyData("LFCXG8BR9", "USDD", "USDD", "USDD", "AUXILIARY", 18),
        "LG4RGB1ML" to CurrencyData("LG4RGB1ML", "soLINK", "Wrapped Chainlink", "soLINK", "AUXILIARY", 6),
        "LGF6FD5NZ" to CurrencyData("LGF6FD5NZ", "XTZ", "Tezos Token", "ꜩ", "AUXILIARY", 18),
        "LGWSMX228" to CurrencyData("LGWSMX228", "INJ", "Injective Token", "INJ", "AUXILIARY", 18),
        "LGXBHQK43" to CurrencyData("LGXBHQK43", "AURORA", "Aurora", "AURORA", "AUXILIARY", 18),
        "LHB3QXMB3" to CurrencyData("LHB3QXMB3", "MKR", "Maker", "Μ", "AUXILIARY", 18),
    )
}
