/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData35 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "QBM57R2TL" to CurrencyData("QBM57R2TL", "GTC", "Gitcoin", "GTC", "AUXILIARY", 18),
        "QCLKJLQWP" to CurrencyData("QCLKJLQWP", "SLSL", "AFREUM STABLE LSL", "SLSL", "AUXILIARY", 7),
        "QCPF66KS0" to CurrencyData("QCPF66KS0", "SSZL", "AFREUM STABLE SZL", "SSZL", "AUXILIARY", 7),
        "QD1L1XC82" to CurrencyData("QD1L1XC82", "OXT", "Orchid", "OXT", "AUXILIARY", 18),
        "QD7K0JHQ8" to CurrencyData("QD7K0JHQ8", "MKR", "Maker", "Μ", "AUXILIARY", 18),
        "QDLR9N7S8" to CurrencyData("QDLR9N7S8", "WONE", "Wrapped ONE", "WONE", "AUXILIARY", 18),
        "QDXDCXTHJ" to CurrencyData("QDXDCXTHJ", "LAYR", "Composable Finance", "LAYR", "NATIVE", 18),
        "QF0N8MN00" to CurrencyData("QF0N8MN00", "HT", "HuobiToken", "HT", "AUXILIARY", 18),
        "QFR76W3N1" to CurrencyData("QFR76W3N1", "SPKR", "AFREUM STABLE PKR", "SPKR", "AUXILIARY", 7),
        "QFRLW96WD" to CurrencyData("QFRLW96WD", "API3", "API3", "API3", "AUXILIARY", 18),
        "QGLWBD8RF" to CurrencyData("QGLWBD8RF", "GST", "GreenSatoshiToken", "GST", "AUXILIARY", 8),
        "QHFMLBRMD" to CurrencyData("QHFMLBRMD", "COMP.e", "Compound", "COMP.e", "AUXILIARY", 18),
        "QHK63QF47" to CurrencyData("QHK63QF47", "MDT", "Measuarable Data Token", "MDT", "AUXILIARY", 18),
        "QHW6CQWGJ" to CurrencyData("QHW6CQWGJ", "ID", "Everest", "ID", "AUXILIARY", 18),
        "QHZW9NJQF" to CurrencyData("QHZW9NJQF", "wROSE", "Wrapped ROSE", "wROSE", "AUXILIARY", 18),
        "QJ15V7F63" to CurrencyData("QJ15V7F63", "WBTC", "Wrapped Bitcoin", "WBTC", "AUXILIARY", 8),
        "QJXZG0R9J" to CurrencyData("QJXZG0R9J", "Cake", "PancakeSwap Token", "Cake", "AUXILIARY", 8),
        "QKFMWK2RP" to CurrencyData("QKFMWK2RP", "SLAK", "AFREUM STABLE LAK", "SLAK", "AUXILIARY", 7),
        "QKGS6LGQ4" to CurrencyData("QKGS6LGQ4", "ORBS", "Orbs", "ORBS", "AUXILIARY", 18),
        "QL1NXPV8S" to CurrencyData("QL1NXPV8S", "AISK", "AFREUM ISK", "AISK", "AUXILIARY", 7),
        "QLRMVKR7K" to CurrencyData("QLRMVKR7K", "PAX", "Paxos Standard", "PAX", "AUXILIARY", 18),
        "QM6M5W2DT" to CurrencyData("QM6M5W2DT", "PRIME", "Prime", "PRIME", "AUXILIARY", 18),
        "QMH6G47W3" to CurrencyData("QMH6G47W3", "MITH", "Mithril", "MITH", "AUXILIARY", 8),
        "QN5FC973R" to CurrencyData("QN5FC973R", "SGIP", "AFREUM STABLE GIP", "SGIP", "AUXILIARY", 7),
        "QNC5Z77DJ" to CurrencyData("QNC5Z77DJ", "vBUSD", "Venus BUSD", "vBUSD", "AUXILIARY", 8),
        "QNFZPQP9C" to CurrencyData("QNFZPQP9C", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "QNJTSSPHL" to CurrencyData("QNJTSSPHL", "BTSG", "BitSong", "BTSG", "NATIVE", 8),
        "QNZDQH768" to CurrencyData("QNZDQH768", "JBL", "JuniorBaseballLeague", "JBL", "AUXILIARY", 18),
        "QP2QBFRQ2" to CurrencyData("QP2QBFRQ2", "FDUSD", "First Digital USD", "FDUSD", "AUXILIARY", 18),
        "QQM6J3QNP" to CurrencyData("QQM6J3QNP", "ALPHA", "AlphaToken", "ALPHA", "AUXILIARY", 18),
        "QQM7PVG32" to CurrencyData("QQM7PVG32", "USDT", "Tether USD", "₮", "AUXILIARY", 6),
        "QR2PP5XM7" to CurrencyData("QR2PP5XM7", "VRA", "Verasity", "VRA", "AUXILIARY", 18),
        "QRP8SJVKW" to CurrencyData("QRP8SJVKW", "wstETH", "Wrapped liquid staked Ether 2.0", "wstETH", "AUXILIARY", 18),
        "QS5GC02FH" to CurrencyData("QS5GC02FH", "USDC", "USD Coin", "USDC", "AUXILIARY", 18),
        "QSNQG5Q0X" to CurrencyData("QSNQG5Q0X", "PBR", "PolkaBridge", "PBR", "AUXILIARY", 18),
        "QSW3RQHTB" to CurrencyData("QSW3RQHTB", "RDNT", "Radiant Capital", "RDNT", "AUXILIARY", 18),
        "QSXT5FM4C" to CurrencyData("QSXT5FM4C", "AZMW", "AFREUM ZMW", "AZMW", "AUXILIARY", 7),
        "QT93Q5KF0" to CurrencyData("QT93Q5KF0", "ioUSDC", "USD Coin", "ioUSDC", "AUXILIARY", 6),
        "QTLVF7VNL" to CurrencyData("QTLVF7VNL", "WPEPE", "Wrapped Pepe", "WPEPE", "AUXILIARY", 18),
        "QTRZ166JG" to CurrencyData("QTRZ166JG", "SMZN", "AFREUM STABLE MZN", "SMZN", "AUXILIARY", 7),
        "QV0BSWBRF" to CurrencyData("QV0BSWBRF", "LTO", "LTO Network", "LTO", "AUXILIARY", 8),
        "QW3RP2BZN" to CurrencyData("QW3RP2BZN", "BTCB", "BTCB Token", "BTCB", "AUXILIARY", 18),
        "QWRDV8KCL" to CurrencyData("QWRDV8KCL", "EURA", "Euro Electronic Money Token", "EURA", "AUXILIARY", 18),
        "QWW17WR8F" to CurrencyData("QWW17WR8F", "TOMOB", "TomoChain", "TOMOB", "AUXILIARY", 8),
        "QX0D8V546" to CurrencyData("QX0D8V546", "IOTX", "IoTeX Network", "IOTX", "AUXILIARY", 18),
        "QX2HDR9Q5" to CurrencyData("QX2HDR9Q5", "LIT", "Litentry", "LIT", "AUXILIARY", 18),
        "QX52HTWMD" to CurrencyData("QX52HTWMD", "MLN", "Melon Token", "MLN", "AUXILIARY", 18),
        "QXG6N01MP" to CurrencyData("QXG6N01MP", "RFR", "Refereum", "RFR", "AUXILIARY", 4),
        "QXZB7S33W" to CurrencyData("QXZB7S33W", "DAI", "Dai Stablecoin from Ethereum", "◈", "AUXILIARY", 18),
        "QZ1MMQ934" to CurrencyData("QZ1MMQ934", "FTT", "FTT Token", "FTT", "AUXILIARY", 18),
    )
}
