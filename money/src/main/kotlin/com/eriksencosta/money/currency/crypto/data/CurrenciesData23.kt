/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData23 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "H4WQ8DMKS" to CurrencyData("H4WQ8DMKS", "APYG", "AFREUM PYG", "APYG", "AUXILIARY", 7),
        "H4WRM7576" to CurrencyData("H4WRM7576", "1USDT", "Tether USD", "1USDT", "AUXILIARY", 6),
        "H5MHJKCMH" to CurrencyData("H5MHJKCMH", "ASR", "AS Roma", "ASR", "AUXILIARY", 0),
        "H60H15ZJZ" to CurrencyData("H60H15ZJZ", "BRKA", "DAAG Certificat/Tracker Perp BRK.A", "BRKA", "AUXILIARY", 8),
        "H64M1HVZ9" to CurrencyData("H64M1HVZ9", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "H67T0R1NB" to CurrencyData("H67T0R1NB", "SMOP", "AFREUM STABLE MOP", "SMOP", "AUXILIARY", 7),
        "H6DNB4KP0" to CurrencyData("H6DNB4KP0", "MATIC", "Matic Token", "MATIC", "AUXILIARY", 18),
        "H6HSB3NRB" to CurrencyData("H6HSB3NRB", "SHTG", "AFREUM STABLE HTG", "SHTG", "AUXILIARY", 7),
        "H6KSPR2ZV" to CurrencyData("H6KSPR2ZV", "PENN", "DAAG Certificat/Tracker Perp PENN", "PENN", "AUXILIARY", 8),
        "H6VJ1SQMV" to CurrencyData("H6VJ1SQMV", "HOT", "HoloToken", "HOT", "AUXILIARY", 18),
        "H7XKC6R0T" to CurrencyData("H7XKC6R0T", "USDT", "Tether USD", "₮", "AUXILIARY", 6),
        "H8767TDVV" to CurrencyData("H8767TDVV", "YFII", "YFII.finance", "YFII", "AUXILIARY", 18),
        "H8TGSDPF4" to CurrencyData("H8TGSDPF4", "SHIB", "Shibwifhat", "SHIB", "AUXILIARY", 9),
        "H92B2VNWW" to CurrencyData("H92B2VNWW", "WOO", "Wootrade Network", "WOO", "AUXILIARY", 18),
        "H95M69C3L" to CurrencyData("H95M69C3L", "DGTX", "DigitexFutures", "DGTX", "AUXILIARY", 18),
        "H9C1JN6RL" to CurrencyData("H9C1JN6RL", "NIO", "DAAG Certificat/Tracker Perp NIO", "NIO", "AUXILIARY", 8),
        "H9D8NPGJH" to CurrencyData("H9D8NPGJH", "COTI", "COTI Token", "COTI", "AUXILIARY", 18),
        "H9GB4FCBH" to CurrencyData("H9GB4FCBH", "NFT", "APENFT", "NFT", "AUXILIARY", 6),
        "H9K499WCP" to CurrencyData("H9K499WCP", "UFT", "UniLend Finance Token (PoS)", "UFT", "AUXILIARY", 18),
        "HB9W094K7" to CurrencyData("HB9W094K7", "AERGO", "Aergo", "AERGO", "AUXILIARY", 18),
        "HBFLG5WP5" to CurrencyData("HBFLG5WP5", "ABMD", "AFREUM BMD", "ABMD", "AUXILIARY", 7),
        "HD5LZG9JV" to CurrencyData("HD5LZG9JV", "SUSHI", "SushiToken", "SUSHI", "AUXILIARY", 18),
        "HDG1054T0" to CurrencyData("HDG1054T0", "MINA", "Mina", "MINA", "PROVISIONAL", 0),
        "HDJ74MDGB" to CurrencyData("HDJ74MDGB", "FRAX", "Frax", "FRAX", "AUXILIARY", 18),
        "HDR3PH0HK" to CurrencyData("HDR3PH0HK", "USDT", "Tether USD", "₮", "AUXILIARY", 6),
        "HDSVVVJ0J" to CurrencyData("HDSVVVJ0J", "OSMO", "Osmosis", "OSMO", "AUXILIARY", 6),
        "HF4SWQR1V" to CurrencyData("HF4SWQR1V", "BIT", "BitDAO", "BIT", "AUXILIARY", 18),
        "HF86HPF1W" to CurrencyData("HF86HPF1W", "SUSD", "AFREUM STABLE USD", "SUSD", "AUXILIARY", 7),
        "HF8RCHVWW" to CurrencyData("HF8RCHVWW", "EURCV", "EUR CoinVertible", "EURCV", "AUXILIARY", 18),
        "HFPKDBCTH" to CurrencyData("HFPKDBCTH", "DOGE", "WHALES DOGE", "Ð", "AUXILIARY", 9),
        "HFT3N3C48" to CurrencyData("HFT3N3C48", "KNC", "Kyber Network Crystal v2", "KNC", "AUXILIARY", 18),
        "HFVJ6582Z" to CurrencyData("HFVJ6582Z", "MATIC", "Matic", "MATIC", "AUXILIARY", 18),
        "HFX40B3W9" to CurrencyData("HFX40B3W9", "FLOW", "Flow", "FLOW", "NATIVE", 18),
        "HFZXSJJHJ" to CurrencyData("HFZXSJJHJ", "USDN", "Neutrino USD", "USDN", "AUXILIARY", 18),
        "HG3C09CNC" to CurrencyData("HG3C09CNC", "SSBD", "AFREUM STABLE SBD", "SSBD", "AUXILIARY", 7),
        "HG68NWGLX" to CurrencyData("HG68NWGLX", "USDCE", "USD Coin Bridged", "USDCE", "AUXILIARY", 6),
        "HGLXQFCKB" to CurrencyData("HGLXQFCKB", "BAKE", "BakerySwap", "BAKE", "AUXILIARY", 18),
        "HGMF3TRBK" to CurrencyData("HGMF3TRBK", "MATIC", "Matic Token", "MATIC", "AUXILIARY", 18),
        "HH35QMXT8" to CurrencyData("HH35QMXT8", "Cake", "PancakeSwap Token", "Cake", "AUXILIARY", 18),
        "HH7L12PLV" to CurrencyData("HH7L12PLV", "SRSD", "AFREUM STABLE RSD", "SRSD", "AUXILIARY", 7),
        "HHD5KXJNR" to CurrencyData("HHD5KXJNR", "Planets", "PLANET", "Planets", "AUXILIARY", 6),
        "HHKM6LM2V" to CurrencyData("HHKM6LM2V", "SYN", "Synapse", "SYN", "AUXILIARY", 18),
        "HHQKBGG5C" to CurrencyData("HHQKBGG5C", "ABRL", "AFREUM BRL", "ABRL", "AUXILIARY", 7),
        "HHZ5N1107" to CurrencyData("HHZ5N1107", "Seele", "SeeleToken", "Seele", "AUXILIARY", 18),
        "HJ1K3JQ1C" to CurrencyData("HJ1K3JQ1C", "KNC", "Kyber Network Crystal", "KNC", "AUXILIARY", 18),
        "HJDPPLML1" to CurrencyData("HJDPPLML1", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "HJHF0RZ71" to CurrencyData("HJHF0RZ71", "FLUX", "Flux", "FLUX", "AUXILIARY", 8),
        "HJN8T8D5X" to CurrencyData("HJN8T8D5X", "YFI", "yearn.finance", "YFI", "AUXILIARY", 18),
        "HK2S1H1J2" to CurrencyData("HK2S1H1J2", "FTT", "FTT", "FTT", "AUXILIARY", 18),
        "HKMCSJCKC" to CurrencyData("HKMCSJCKC", "ROW", "RageOnWheels", "ROW", "AUXILIARY", 18),
    )
}
