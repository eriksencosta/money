/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData34 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "PL1B6SZMG" to CurrencyData("PL1B6SZMG", "ATRY", "AFREUM TRY", "ATRY", "AUXILIARY", 7),
        "PLQFZP6XK" to CurrencyData("PLQFZP6XK", "NULS", "Nuls", "NULS", "AUXILIARY", 8),
        "PM4248QB4" to CurrencyData("PM4248QB4", "bwJUP", "BSC Wrapped Jupiter", "bwJUP", "AUXILIARY", 18),
        "PMPRJ5XT0" to CurrencyData("PMPRJ5XT0", "WBNB", "Wrapped BNB", "WBNB", "AUXILIARY", 18),
        "PNMD0SFLX" to CurrencyData("PNMD0SFLX", "T", "Threshold Network Token", "T", "AUXILIARY", 18),
        "PNPZVVHZN" to CurrencyData("PNPZVVHZN", "SXCD", "AFREUM STABLE XCD", "SXCD", "AUXILIARY", 7),
        "PQ5GVJBH5" to CurrencyData("PQ5GVJBH5", "FABBC", "Fantom ABBC", "FABBC", "AUXILIARY", 8),
        "PR8VQ66HQ" to CurrencyData("PR8VQ66HQ", "YFI", "yearn.finance", "YFI", "AUXILIARY", 18),
        "PSTHR9DXT" to CurrencyData("PSTHR9DXT", "ALBT", "AllianceBlock Token", "ALBT", "AUXILIARY", 18),
        "PTN9Z5Q7D" to CurrencyData("PTN9Z5Q7D", "CELO", "Celo", "CELO", "NATIVE", 18),
        "PVDJZJ7PJ" to CurrencyData("PVDJZJ7PJ", "PERL", "PERL.eco", "PERL", "AUXILIARY", 18),
        "PVS2KWZVT" to CurrencyData("PVS2KWZVT", "JEWEL", "DFK Subnet JEWEL", "JEWEL", "NATIVE", 9),
        "PW1SD8FKL" to CurrencyData("PW1SD8FKL", "Metis", "Metis Token", "Metis", "AUXILIARY", 18),
        "PX6T139PR" to CurrencyData("PX6T139PR", "ESCE", "EscrocoEmerald", "ESCE", "AUXILIARY", 6),
        "PXK9B3H8Z" to CurrencyData("PXK9B3H8Z", "WBTC", "Bitcoin", "₿", "AUXILIARY", 8),
        "PXLZ7B5Q4" to CurrencyData("PXLZ7B5Q4", "OMI", "OMI Token", "Ο", "AUXILIARY", 18),
        "PXSD2D57B" to CurrencyData("PXSD2D57B", "ACLP", "AFREUM CLP", "ACLP", "AUXILIARY", 7),
        "PZ16T1D3F" to CurrencyData("PZ16T1D3F", "SNX", "Synthetix Network Token", "SNX", "AUXILIARY", 18),
        "PZ5PWDTV1" to CurrencyData("PZ5PWDTV1", "AXL", "Axelar", "AXL", "AUXILIARY", 6),
        "Q18RJCV4T" to CurrencyData("Q18RJCV4T", "CH1303238757", "NA Aktionariat", "CH1303238757", "AUXILIARY", 0),
        "Q1NNRBW43" to CurrencyData("Q1NNRBW43", "stETH", "Liquid staked Ether 2.0", "stETH", "AUXILIARY", 18),
        "Q2QDNVB1X" to CurrencyData("Q2QDNVB1X", "AXL", "Axelar", "AXL", "AUXILIARY", 6),
        "Q2ST0HB14" to CurrencyData("Q2ST0HB14", "AAED", "AFREUM AED", "AAED", "AUXILIARY", 7),
        "Q31LMPCZ6" to CurrencyData("Q31LMPCZ6", "HUSD", "HUSD", "HUSD", "AUXILIARY", 8),
        "Q3CW6BFPF" to CurrencyData("Q3CW6BFPF", "FLOKI", "CRAZY FLOKI", "FLOKI", "AUXILIARY", 9),
        "Q3HS7SPQT" to CurrencyData("Q3HS7SPQT", "ELA", "ELA on HuobiChain", "ELA", "AUXILIARY", 18),
        "Q3KN11TMS" to CurrencyData("Q3KN11TMS", "TVK", "Virtua", "TVK", "AUXILIARY", 18),
        "Q3V25S3B4" to CurrencyData("Q3V25S3B4", "ARON", "AFREUM RON", "ARON", "AUXILIARY", 7),
        "Q482DNNV9" to CurrencyData("Q482DNNV9", "SSV", "ssv.network", "SSV", "AUXILIARY", 18),
        "Q496SMNBP" to CurrencyData("Q496SMNBP", "BENJI", "Franklin OnChain U.S. Government Money Fund", "BENJI", "AUXILIARY", 18),
        "Q49XFTXH7" to CurrencyData("Q49XFTXH7", "TLRY", "DAAG Certificat/Tracker Perp TLRY", "TLRY", "AUXILIARY", 8),
        "Q4T7KPRCR" to CurrencyData("Q4T7KPRCR", "BETA", "Beta Token", "BETA", "AUXILIARY", 18),
        "Q506SS48K" to CurrencyData("Q506SS48K", "SXP", "Swipe", "SXP", "AUXILIARY", 18),
        "Q59ZS1S0R" to CurrencyData("Q59ZS1S0R", "ARAW", "ARAW", "ARAW", "AUXILIARY", 18),
        "Q5F36H955" to CurrencyData("Q5F36H955", "MYTH", "Mysticland", "MYTH", "AUXILIARY", 9),
        "Q5M8XZ3VC" to CurrencyData("Q5M8XZ3VC", "FET", "FET", "FET", "AUXILIARY", 18),
        "Q5NCKWK2B" to CurrencyData("Q5NCKWK2B", "WOO", "Heco-Peg WOO Token", "WOO", "AUXILIARY", 18),
        "Q5RVN1R5W" to CurrencyData("Q5RVN1R5W", "AIQD", "AFREUM IQD", "AIQD", "AUXILIARY", 7),
        "Q5V7P2WGB" to CurrencyData("Q5V7P2WGB", "QI", "Qi Dao", "QI", "AUXILIARY", 27),
        "Q5ZJLVC3V" to CurrencyData("Q5ZJLVC3V", "ETH", "axlWETH", "Ξ", "AUXILIARY", 18),
        "Q6FXWGJDK" to CurrencyData("Q6FXWGJDK", "ILV", "Illuvium", "ILV", "AUXILIARY", 18),
        "Q6H1WK0Q0" to CurrencyData("Q6H1WK0Q0", "ETH", "The Infinite Garden", "Ξ", "AUXILIARY", 18),
        "Q6QGSNX6G" to CurrencyData("Q6QGSNX6G", "ANKR", "Ankr", "ANKR", "AUXILIARY", 18),
        "Q8FX17M6Q" to CurrencyData("Q8FX17M6Q", "KAVA", "Kava.io", "KAVA", "AUXILIARY", 6),
        "Q8H610C06" to CurrencyData("Q8H610C06", "XCN", "Chain", "XCN", "AUXILIARY", 18),
        "Q8PG1VP4V" to CurrencyData("Q8PG1VP4V", "ABZD", "AFREUM BZD", "ABZD", "AUXILIARY", 7),
        "Q9PB7XDNF" to CurrencyData("Q9PB7XDNF", "USDT", "Tether", "₮", "AUXILIARY", 6),
        "QBGXW5RWK" to CurrencyData("QBGXW5RWK", "XET", "Xfinite Entertainment Token", "XET", "AUXILIARY", 9),
        "QBKC3XVKD" to CurrencyData("QBKC3XVKD", "ZEC", "Zcash Token", "ⓩ", "AUXILIARY", 18),
        "QBLW2V2XS" to CurrencyData("QBLW2V2XS", "USDT", "Tether USD", "₮", "AUXILIARY", 18),
    )
}
