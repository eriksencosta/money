/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData37 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "RKZCT9KMH" to CurrencyData("RKZCT9KMH", "USDT", "Tether USD", "₮", "AUXILIARY", 6),
        "RL50BH17M" to CurrencyData("RL50BH17M", "WOO", "WOO Network", "WOO", "AUXILIARY", 18),
        "RLJ8P4V0G" to CurrencyData("RLJ8P4V0G", "GRT", "Graph Token", "GRT", "AUXILIARY", 8),
        "RLSTXN9JN" to CurrencyData("RLSTXN9JN", "SYN", "Synapse", "SYN", "AUXILIARY", 18),
        "RM9KPQ8MB" to CurrencyData("RM9KPQ8MB", "BETH", "Beacon ETH", "BETH", "AUXILIARY", 18),
        "RNMN1L5R3" to CurrencyData("RNMN1L5R3", "USDC", "Multichain USDC", "USDC", "AUXILIARY", 6),
        "RP7Q5RQZ4" to CurrencyData("RP7Q5RQZ4", "LUNA", "LUNA", "LUNA", "AUXILIARY", 6),
        "RPSZKZ35X" to CurrencyData("RPSZKZ35X", "USDT", "Heco-Peg USDT Token", "₮", "AUXILIARY", 18),
        "RPTZTNCRS" to CurrencyData("RPTZTNCRS", "FXS", "Frax Share", "FXS", "AUXILIARY", 18),
        "RQGSSPQ03" to CurrencyData("RQGSSPQ03", "RNDR", "Render", "RNDR", "AUXILIARY", 8),
        "RRTH4CPG8" to CurrencyData("RRTH4CPG8", "DFI", "DeFiChain Token", "DFI", "AUXILIARY", 8),
        "RRXX1SK0W" to CurrencyData("RRXX1SK0W", "WETH", "Wrapped Ether on Fuse", "WETH", "AUXILIARY", 18),
        "RRZ9ND76C" to CurrencyData("RRZ9ND76C", "NEXO", "Nexo (PoS)", "NEXO", "AUXILIARY", 18),
        "RS9HR8QCK" to CurrencyData("RS9HR8QCK", "XOR", "Sora XOR", "XOR", "NATIVE", 3),
        "RS9SFC444" to CurrencyData("RS9SFC444", "OSMO", "Osmosis", "OSMO", "AUXILIARY", 6),
        "RSD6624S3" to CurrencyData("RSD6624S3", "APGK", "AFREUM PGK", "APGK", "AUXILIARY", 7),
        "RSV4B2ZFH" to CurrencyData("RSV4B2ZFH", "TT-USDT", "TT-USDT", "TT-USDT", "AUXILIARY", 6),
        "RSXLFHTTS" to CurrencyData("RSXLFHTTS", "T", "T", "T", "AUXILIARY", 18),
        "RT5R2K79G" to CurrencyData("RT5R2K79G", "SC", "SC STEEL/OPT PERP", "SC", "AUXILIARY", 18),
        "RTHZBQTJ9" to CurrencyData("RTHZBQTJ9", "WBCD", "Wrapped Bitcoin Diamond", "WBCD", "AUXILIARY", 7),
        "RTJPLFZSS" to CurrencyData("RTJPLFZSS", "LINK", "ChainLink Token", "LINK", "AUXILIARY", 18),
        "RTLD61D5C" to CurrencyData("RTLD61D5C", "WCFX", "Wrapped Conflux", "WCFX", "AUXILIARY", 18),
        "RTLDKNZ64" to CurrencyData("RTLDKNZ64", "BOBA", "Boba Ethereum Network", "BOBA", "NATIVE", 18),
        "RVJ2VRQ3D" to CurrencyData("RVJ2VRQ3D", "USDN", "Neutrino USD", "USDN", "AUXILIARY", 6),
        "RVNGR71QZ" to CurrencyData("RVNGR71QZ", "token-wbtc", "Wrapped Bitcoin", "token-wbtc", "AUXILIARY", 18),
        "RW71HP6FT" to CurrencyData("RW71HP6FT", "EGLD", "Elrond", "EGLD", "AUXILIARY", 18),
        "RW8JS11D7" to CurrencyData("RW8JS11D7", "AQAR", "AFREUM QAR", "AQAR", "AUXILIARY", 7),
        "RXDCQ4H4S" to CurrencyData("RXDCQ4H4S", "ADA", "Cardano Token", "₳", "AUXILIARY", 18),
        "RXT020DF5" to CurrencyData("RXT020DF5", "LDO", "Lido DAO Token", "LDO", "AUXILIARY", 18),
        "RXTQCJR5R" to CurrencyData("RXTQCJR5R", "HK0000963295", "HKSAR/FR BD 20260126 UNSEC", "HK0000963295", "PROVISIONAL", 0),
        "RZ1FP92TT" to CurrencyData("RZ1FP92TT", "GLM", "Golem Network Token (PoS)", "GLM", "AUXILIARY", 18),
        "RZ43VKXQ0" to CurrencyData("RZ43VKXQ0", "PRQ", "Parsiq Token", "PRQ", "AUXILIARY", 18),
        "RZG5FCW6T" to CurrencyData("RZG5FCW6T", "USDT", "Tether USD", "₮", "AUXILIARY", 6),
        "RZX4Q73H3" to CurrencyData("RZX4Q73H3", "pONT", "Poly Ontology Token", "pONT", "AUXILIARY", 9),
        "S10NS7V6G" to CurrencyData("S10NS7V6G", "USDT", "USDT", "₮", "AUXILIARY", 6),
        "S172HF2CL" to CurrencyData("S172HF2CL", "ARAW", "ARAW", "ARAW", "AUXILIARY", 6),
        "S1M7DBGM3" to CurrencyData("S1M7DBGM3", "USTC", "Terra Classic USD (Wormhole)", "USTC", "AUXILIARY", 6),
        "S26C2KW0R" to CurrencyData("S26C2KW0R", "PERP", "Perpetual", "PERP", "AUXILIARY", 18),
        "S3DNT24Z3" to CurrencyData("S3DNT24Z3", "AAVE", "Aave Token", "AAVE", "AUXILIARY", 18),
        "S3NCZ6W7D" to CurrencyData("S3NCZ6W7D", "SNX", "Synthetix Network", "SNX", "AUXILIARY", 18),
        "S495BVMQV" to CurrencyData("S495BVMQV", "HLTC", "Heco-Peg HLTC Token", "HLTC", "AUXILIARY", 18),
        "S4KFS1J64" to CurrencyData("S4KFS1J64", "KNC", "Kyber Network Crystal", "KNC", "AUXILIARY", 18),
        "S5R7499GM" to CurrencyData("S5R7499GM", "SBSD", "AFREUM STABLE BSD", "SBSD", "AUXILIARY", 7),
        "S6K89D33S" to CurrencyData("S6K89D33S", "TNSR", "Tensor", "TNSR", "AUXILIARY", 9),
        "S6TLXKRV9" to CurrencyData("S6TLXKRV9", "OCT", "Octopus Network Token", "OCT", "AUXILIARY", 18),
        "S71KQ60V6" to CurrencyData("S71KQ60V6", "DAI", "axlDAI �", "◈", "AUXILIARY", 18),
        "S793VR9KV" to CurrencyData("S793VR9KV", "OOKI", "Ooki Token", "OOKI", "AUXILIARY", 18),
        "S7KWCDTFT" to CurrencyData("S7KWCDTFT", "AHNL", "AFREUM HNL", "AHNL", "AUXILIARY", 7),
        "S87NJRT7T" to CurrencyData("S87NJRT7T", "OSMO", "Osmosis OSMO", "OSMO", "NATIVE", 6),
        "S8J06RVF2" to CurrencyData("S8J06RVF2", "AILS", "AFREUM ILS", "AILS", "AUXILIARY", 7),
    )
}
