/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData30 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "M2HHNHT0D" to CurrencyData("M2HHNHT0D", "HOT", "HoloToken on xDai", "HOT", "AUXILIARY", 18),
        "M3C1KXV7Q" to CurrencyData("M3C1KXV7Q", "MTL", "Metal", "MTL", "AUXILIARY", 8),
        "M3F870ZJJ" to CurrencyData("M3F870ZJJ", "lisUSD", "Lista USD", "lisUSD", "AUXILIARY", 18),
        "M45J5XBWF" to CurrencyData("M45J5XBWF", "ALKR", "AFREUM LKR", "ALKR", "AUXILIARY", 7),
        "M4CLDSDW7" to CurrencyData("M4CLDSDW7", "GNS", "Gains Network", "GNS", "AUXILIARY", 18),
        "M4FLVF81Q" to CurrencyData("M4FLVF81Q", "EOS", "EOS", "ε", "NATIVE", 4),
        "M50W1QH4X" to CurrencyData("M50W1QH4X", "FEI", "Poly-Peg FEI", "FEI", "AUXILIARY", 18),
        "M54P10X8Q" to CurrencyData("M54P10X8Q", "ABBD", "AFREUM BBD", "ABBD", "AUXILIARY", 7),
        "M5D76SHV5" to CurrencyData("M5D76SHV5", "DASH", "Dash", "Đ", "NATIVE", 8),
        "M6683RT1L" to CurrencyData("M6683RT1L", "SOL", "Solana", "◎", "AUXILIARY", 24),
        "M6C012819" to CurrencyData("M6C012819", "AION", "AION", "AION", "AUXILIARY", 8),
        "M7C8L07RX" to CurrencyData("M7C8L07RX", "GALA", "Gala", "GALA", "AUXILIARY", 8),
        "M7MD3JKNS" to CurrencyData("M7MD3JKNS", "AHRK", "AFREUM HRK", "AHRK", "AUXILIARY", 7),
        "M7SJDHNT0" to CurrencyData("M7SJDHNT0", "GLXY", "DAAG Certificat/Tracker Perp GLXY", "GLXY", "AUXILIARY", 8),
        "M87907ZL3" to CurrencyData("M87907ZL3", "BAL", "Balancer", "BAL", "AUXILIARY", 18),
        "M891S3VXC" to CurrencyData("M891S3VXC", "SXPF", "AFREUM STABLE XPF", "SXPF", "AUXILIARY", 7),
        "M8G59S1ZR" to CurrencyData("M8G59S1ZR", "USDC", "USDC", "USDC", "AUXILIARY", 6),
        "M8K77XN2R" to CurrencyData("M8K77XN2R", "DGTX", "DigitexFutures", "DGTX", "AUXILIARY", 18),
        "M8Z9JSG9Q" to CurrencyData("M8Z9JSG9Q", "ALGO", "Algorand", "Ⱥ", "NATIVE", 6),
        "MB71JXT40" to CurrencyData("MB71JXT40", "BNB", "Binance Coin", "BNB", "AUXILIARY", 18),
        "MBBT2V7TR" to CurrencyData("MBBT2V7TR", "ASRD", "AFREUM SRD", "ASRD", "AUXILIARY", 7),
        "MBMF7QB8R" to CurrencyData("MBMF7QB8R", "SCLP", "AFREUM STABLE CLP", "SCLP", "AUXILIARY", 7),
        "MC3GWMNCZ" to CurrencyData("MC3GWMNCZ", "BTG", "Btgold_Org", "BTG", "AUXILIARY", 6),
        "MC73KT6K4" to CurrencyData("MC73KT6K4", "ATOM", "Cosmos", "ATOM", "AUXILIARY", 6),
        "MCNG5QGRX" to CurrencyData("MCNG5QGRX", "SMRU", "AFREUM STABLE MRU", "SMRU", "AUXILIARY", 7),
        "MCVX0QJTC" to CurrencyData("MCVX0QJTC", "NFT", "APENFT", "NFT", "AUXILIARY", 6),
        "MF997QGND" to CurrencyData("MF997QGND", "FGC", "FantasyGold", "FGC", "AUXILIARY", 18),
        "MFB10VML7" to CurrencyData("MFB10VML7", "FLOKI", "FLOKI", "FLOKI", "AUXILIARY", 9),
        "MFC9WD1FX" to CurrencyData("MFC9WD1FX", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "MGQZ517X0" to CurrencyData("MGQZ517X0", "RUNE", "THORChain ETH.RUNE", "RUNE", "AUXILIARY", 18),
        "MGV6H93B8" to CurrencyData("MGV6H93B8", "WING", "Wing Token", "WING", "AUXILIARY", 9),
        "MH7QMBCVF" to CurrencyData("MH7QMBCVF", "cUSDC", "Compound USD Coin", "cUSDC", "AUXILIARY", 8),
        "MHKSMMV49" to CurrencyData("MHKSMMV49", "USDC", "USDC", "USDC", "AUXILIARY", 6),
        "MHS2CP5SR" to CurrencyData("MHS2CP5SR", "SLYD", "AFREUM STABLE LYD", "SLYD", "AUXILIARY", 7),
        "MJ4JJGJ97" to CurrencyData("MJ4JJGJ97", "BUSD", "Binance USD", "BUSD", "AUXILIARY", 18),
        "MJ5GFQF4P" to CurrencyData("MJ5GFQF4P", "EXFI", "Experimental Finance Token", "EXFI", "AUXILIARY", 18),
        "MKF3XGBJ0" to CurrencyData("MKF3XGBJ0", "ZETA", "Zeta", "ZETA", "AUXILIARY", 18),
        "ML18MBJX2" to CurrencyData("ML18MBJX2", "HBCH", "Heco-Peg HBCH Token", "HBCH", "AUXILIARY", 18),
        "MMPB7R4CV" to CurrencyData("MMPB7R4CV", "FXF", "Finxflo", "FXF", "AUXILIARY", 18),
        "MN818MFC7" to CurrencyData("MN818MFC7", "SNX", "Synthetix Network Token", "SNX", "AUXILIARY", 8),
        "MP6ZH948T" to CurrencyData("MP6ZH948T", "ANOK", "AFREUM NOK", "ANOK", "AUXILIARY", 7),
        "MPF48DW56" to CurrencyData("MPF48DW56", "RSR", "Reserve Rights", "RSR", "AUXILIARY", 18),
        "MPPKGK6LT" to CurrencyData("MPPKGK6LT", "AALL", "AFREUM ALL", "AALL", "AUXILIARY", 7),
        "MQ3D6VHLF" to CurrencyData("MQ3D6VHLF", "UFT", "UniLend Finance Token", "UFT", "AUXILIARY", 18),
        "MQHGXN5GR" to CurrencyData("MQHGXN5GR", "CRON", "DAAG Certificat/Tracker Perp CRON", "CRON", "AUXILIARY", 8),
        "MQX9MVJCX" to CurrencyData("MQX9MVJCX", "ANT", "Aragon Network Token", "ANT", "AUXILIARY", 18),
        "MRC1QSXWQ" to CurrencyData("MRC1QSXWQ", "WSTETH", "Lido wstETH", "WSTETH", "AUXILIARY", 18),
        "MRKJVKHFF" to CurrencyData("MRKJVKHFF", "UPEUR", "Universal Euro", "UPEUR", "AUXILIARY", 2),
        "MRQBVKJ85" to CurrencyData("MRQBVKJ85", "wstETH", "Wrapped liquid staked Ether 2.0", "wstETH", "AUXILIARY", 18),
        "MRT0NS181" to CurrencyData("MRT0NS181", "SLKR", "AFREUM STABLE LKR", "SLKR", "AUXILIARY", 7),
    )
}
