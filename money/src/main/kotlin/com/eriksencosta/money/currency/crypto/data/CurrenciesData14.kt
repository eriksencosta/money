/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData14 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "98MBBPTCK" to CurrencyData("98MBBPTCK", "TORN", "TornadoCash", "TORN", "AUXILIARY", 18),
        "997CHXT2G" to CurrencyData("997CHXT2G", "SFKP", "AFREUM STABLE FKP", "SFKP", "AUXILIARY", 7),
        "99H118WXJ" to CurrencyData("99H118WXJ", "WETC", "Wrapped Ether", "WETC", "AUXILIARY", 18),
        "99H74MTTB" to CurrencyData("99H74MTTB", "1INCH", "1INCH Token", "1INCH", "AUXILIARY", 8),
        "99XCCNBHW" to CurrencyData("99XCCNBHW", "HBD", "Hive Dollar", "HBD", "AUXILIARY", 12),
        "9B098XMSX" to CurrencyData("9B098XMSX", "WMATIC", "Wrapped Matic", "WMATIC", "AUXILIARY", 18),
        "9B4W7HH81" to CurrencyData("9B4W7HH81", "NULS", "Nuls", "NULS", "AUXILIARY", 8),
        "9BG3JZN4C" to CurrencyData("9BG3JZN4C", "AMNT", "AFREUM MNT", "AMNT", "AUXILIARY", 7),
        "9BH22F7Q6" to CurrencyData("9BH22F7Q6", "SWRV", "Swerve DAO Token", "SWRV", "AUXILIARY", 18),
        "9BH267RHB" to CurrencyData("9BH267RHB", "GCN", "Gascoin", "GCN", "AUXILIARY", 18),
        "9BNZMQ3WW" to CurrencyData("9BNZMQ3WW", "SC", "Siacoin", "SC", "NATIVE", 24),
        "9BTLTKMPD" to CurrencyData("9BTLTKMPD", "HIGH", "Highstreet Token", "HIGH", "AUXILIARY", 18),
        "9BV22CBVF" to CurrencyData("9BV22CBVF", "BAL", "Balancer on xDai", "BAL", "AUXILIARY", 18),
        "9BXZWX03F" to CurrencyData("9BXZWX03F", "DIA", "DIAToken", "DIA", "AUXILIARY", 18),
        "9C0Q5HQ1J" to CurrencyData("9C0Q5HQ1J", "MICRO", "Micromines", "MICRO", "AUXILIARY", 6),
        "9CMNB37BQ" to CurrencyData("9CMNB37BQ", "SBWP", "AFREUM STABLE BWP", "SBWP", "AUXILIARY", 7),
        "9CNPKCW55" to CurrencyData("9CNPKCW55", "SQAR", "AFREUM STABLE QAR", "SQAR", "AUXILIARY", 7),
        "9CZ8NFJ89" to CurrencyData("9CZ8NFJ89", "SOL", "SonicObamaLockheedMartin69Inu", "◎", "AUXILIARY", 4),
        "9DH9PWVFT" to CurrencyData("9DH9PWVFT", "oUSDC", "Orbit Bridge Ton USD Coin", "oUSDC", "AUXILIARY", 6),
        "9FBKW8DJC" to CurrencyData("9FBKW8DJC", "NEXO", "Nexo", "NEXO", "AUXILIARY", 18),
        "9FN12922K" to CurrencyData("9FN12922K", "SRUB", "AFREUM STABLE RUB", "SRUB", "AUXILIARY", 7),
        "9FQC6M44R" to CurrencyData("9FQC6M44R", "AKZT", "AFREUM KZT", "AKZT", "AUXILIARY", 7),
        "9G5NMMGLC" to CurrencyData("9G5NMMGLC", "AGI", "SingularityNET Token", "AGI", "AUXILIARY", 8),
        "9GGBS7NSH" to CurrencyData("9GGBS7NSH", "ETHFI", "ether.fi governance token", "ETHFI", "AUXILIARY", 18),
        "9GXVVGV87" to CurrencyData("9GXVVGV87", "ZRP", "Zapit Reward Points", "ZRP", "AUXILIARY", 4),
        "9HFWRMTZ9" to CurrencyData("9HFWRMTZ9", "cETH", "Compound Ether", "cETH", "AUXILIARY", 8),
        "9HPQ21D7Q" to CurrencyData("9HPQ21D7Q", "SPAB", "AFREUM STABLE PAB", "SPAB", "AUXILIARY", 7),
        "9HZNPNN89" to CurrencyData("9HZNPNN89", "LTX", "Lattice Token", "LTX", "AUXILIARY", 8),
        "9JL11V3JD" to CurrencyData("9JL11V3JD", "FET", "Fetch", "FET", "AUXILIARY", 18),
        "9K0G4CQJQ" to CurrencyData("9K0G4CQJQ", "CVC", "Civic", "CVC", "AUXILIARY", 8),
        "9K3JVGJLQ" to CurrencyData("9K3JVGJLQ", "WETH", "Wrapped Ether", "WETH", "AUXILIARY", 18),
        "9KCP6QN5T" to CurrencyData("9KCP6QN5T", "ANKR", "Ankr", "ANKR", "AUXILIARY", 8),
        "9KRM76LJH" to CurrencyData("9KRM76LJH", "JITOSOL", "Jito Staked SOL", "JITOSOL", "AUXILIARY", 9),
        "9KT5X4GCT" to CurrencyData("9KT5X4GCT", "vETH", "Venus ETH", "vETH", "AUXILIARY", 8),
        "9L10PQT5B" to CurrencyData("9L10PQT5B", "1ONE", "Harmony ONE", "1ONE", "AUXILIARY", 18),
        "9L44LK8GV" to CurrencyData("9L44LK8GV", "AUDIO", "Audius", "AUDIO", "AUXILIARY", 8),
        "9LQZGQ8WS" to CurrencyData("9LQZGQ8WS", "MLC", "MELE", "MLC", "AUXILIARY", 18),
        "9MBXS528H" to CurrencyData("9MBXS528H", "ZBU", "ZEEBU", "ZBU", "AUXILIARY", 18),
        "9MRKKH0SQ" to CurrencyData("9MRKKH0SQ", "OMG", "OMGToken", "OMG", "AUXILIARY", 18),
        "9P8HW67Z0" to CurrencyData("9P8HW67Z0", "C98", "Coin98", "C98", "AUXILIARY", 18),
        "9Q0BZD6BD" to CurrencyData("9Q0BZD6BD", "HIFI", "Hifi Finance", "HIFI", "AUXILIARY", 18),
        "9Q31GMG6X" to CurrencyData("9Q31GMG6X", "MXC", "MXCToken", "MXC", "AUXILIARY", 18),
        "9QN2J4TN5" to CurrencyData("9QN2J4TN5", "DOGE", "SUPER DOGE", "Ð", "AUXILIARY", 9),
        "9QP0TMFH2" to CurrencyData("9QP0TMFH2", "wROSE", "Wrapped ROSE", "wROSE", "AUXILIARY", 18),
        "9QS4MZWV1" to CurrencyData("9QS4MZWV1", "SSX", "SOMESING", "SSX", "AUXILIARY", 18),
        "9R9DH9S63" to CurrencyData("9R9DH9S63", "USDC", "USDC", "USDC", "AUXILIARY", 6),
        "9RHRC9B9S" to CurrencyData("9RHRC9B9S", "MABBC", "Matic ABBC", "MABBC", "AUXILIARY", 8),
        "9SQHXFJ6V" to CurrencyData("9SQHXFJ6V", "ETH", "Ether", "Ξ", "AUXILIARY", 18),
        "9T3KVB66T" to CurrencyData("9T3KVB66T", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "9V66W5M31" to CurrencyData("9V66W5M31", "ALPINE", "ALPINE Fan Token", "ALPINE", "AUXILIARY", 8),
    )
}
