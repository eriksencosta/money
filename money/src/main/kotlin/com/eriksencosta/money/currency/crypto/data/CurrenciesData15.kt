/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData15 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "9V7055V26" to CurrencyData("9V7055V26", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "9VR3WN1JJ" to CurrencyData("9VR3WN1JJ", "GMX", "GMX", "GMX", "AUXILIARY", 18),
        "9VS4L2JRX" to CurrencyData("9VS4L2JRX", "AMP", "Amp", "AMP", "AUXILIARY", 18),
        "9VSMXTSM2" to CurrencyData("9VSMXTSM2", "AXL", "Axelar", "AXL", "AUXILIARY", 6),
        "9WKT78ZW7" to CurrencyData("9WKT78ZW7", "ENS", "Ethereum Name Service", "ENS", "AUXILIARY", 8),
        "9X0Z5NR7F" to CurrencyData("9X0Z5NR7F", "CRV", "Curve DAO Token", "CRV", "AUXILIARY", 18),
        "9X1Z1NQG5" to CurrencyData("9X1Z1NQG5", "bb-a-USDT", "Balancer Aave Boosted Pool (USDT)", "bb-a-USDT", "AUXILIARY", 18),
        "9XH1JFM3K" to CurrencyData("9XH1JFM3K", "USDT", "Tether USD", "₮", "AUXILIARY", 18),
        "9Z70BDNZL" to CurrencyData("9Z70BDNZL", "Auction", "Bounce Token", "Auction", "AUXILIARY", 18),
        "9ZQPXXG9V" to CurrencyData("9ZQPXXG9V", "SEUR", "AFREUM STABLE EUR", "SEUR", "AUXILIARY", 7),
        "9ZR9S91FV" to CurrencyData("9ZR9S91FV", "USDT", "Tether USDt", "₮", "AUXILIARY", 6),
        "9ZZS6Q0NJ" to CurrencyData("9ZZS6Q0NJ", "HFT", "Hashflow", "HFT", "AUXILIARY", 18),
        "B0XM6WMX8" to CurrencyData("B0XM6WMX8", "USDT", "Tether USD on xDai", "₮", "AUXILIARY", 6),
        "B16J8HBKK" to CurrencyData("B16J8HBKK", "SAND", "SAND", "SAND", "AUXILIARY", 18),
        "B1H54F7WS" to CurrencyData("B1H54F7WS", "ABC", "DAAG Certificat/Tracker Perp ABC", "ABC", "AUXILIARY", 8),
        "B1JQCK0PB" to CurrencyData("B1JQCK0PB", "SCRC", "AFREUM STABLE CRC", "SCRC", "AUXILIARY", 7),
        "B1R5WV8J1" to CurrencyData("B1R5WV8J1", "PROS", "Prosper", "PROS", "AUXILIARY", 18),
        "B225P1CPG" to CurrencyData("B225P1CPG", "ID", "SPACE ID", "ID", "AUXILIARY", 18),
        "B26Q4WR45" to CurrencyData("B26Q4WR45", "SUSHI", "SushiToken", "SUSHI", "AUXILIARY", 18),
        "B2TVJN7Q1" to CurrencyData("B2TVJN7Q1", "wCFG", "Wrapped Centrifuge", "wCFG", "AUXILIARY", 18),
        "B32CZK73B" to CurrencyData("B32CZK73B", "BTT", "BitTorrent", "BTT", "AUXILIARY", 18),
        "B33WFZN2S" to CurrencyData("B33WFZN2S", "POND", "Marlin POND", "POND", "AUXILIARY", 18),
        "B48RKHX7Z" to CurrencyData("B48RKHX7Z", "LINK", "ChainLink Token", "LINK", "AUXILIARY", 18),
        "B4FKPN7PX" to CurrencyData("B4FKPN7PX", "USDT.eth", "Wrapped USDT from Ethereum on Meter", "USDT.eth", "AUXILIARY", 6),
        "B4J86S0KD" to CurrencyData("B4J86S0KD", "LINK", "Chainlink Token", "LINK", "AUXILIARY", 8),
        "B5G1FTVC5" to CurrencyData("B5G1FTVC5", "SXAF", "AFREUM STABLE XAF", "SXAF", "AUXILIARY", 7),
        "B6QH7BGQX" to CurrencyData("B6QH7BGQX", "XAUT", "Tether Gold", "XAUT", "AUXILIARY", 6),
        "B79HHCW6R" to CurrencyData("B79HHCW6R", "Auction", "Bounce Token", "Auction", "AUXILIARY", 18),
        "B7BBPK8QM" to CurrencyData("B7BBPK8QM", "TRYB", "BiLira", "TRYB", "AUXILIARY", 6),
        "B7J7BBMGQ" to CurrencyData("B7J7BBMGQ", "BORG", "SwissBorg Token", "BORG", "AUXILIARY", 18),
        "B8DH60MPJ" to CurrencyData("B8DH60MPJ", "RUNE", "THORChain", "RUNE", "NATIVE", 8),
        "B8XS93568" to CurrencyData("B8XS93568", "USDCLEGACY", "USD Coin", "USDCLEGACY", "AUXILIARY", 6),
        "B95X33147" to CurrencyData("B95X33147", "MDT", "Measuarable Data Token", "MDT", "AUXILIARY", 18),
        "B960VD22D" to CurrencyData("B960VD22D", "YFI.e", "yearn.finance", "YFI.e", "AUXILIARY", 18),
        "B9RZ02BZ2" to CurrencyData("B9RZ02BZ2", "ASLL", "AFREUM SLL", "ASLL", "AUXILIARY", 7),
        "B9T0TNB62" to CurrencyData("B9T0TNB62", "GLMR", "Moonbeam", "GLMR", "NATIVE", 18),
        "BBCNHQ240" to CurrencyData("BBCNHQ240", "SZMW", "AFREUM STABLE ZMW", "SZMW", "AUXILIARY", 7),
        "BBX8HQX6F" to CurrencyData("BBX8HQX6F", "STRY", "AFREUM STABLE TRY", "STRY", "AUXILIARY", 7),
        "BC9HM85Q6" to CurrencyData("BC9HM85Q6", "DODO", "DODO", "DODO", "AUXILIARY", 18),
        "BC9X1GT3F" to CurrencyData("BC9X1GT3F", "SWTH", "Switcheo", "SWTH", "AUXILIARY", 8),
        "BD33N0T5G" to CurrencyData("BD33N0T5G", "SBRL", "AFREUM STABLE BRL", "SBRL", "AUXILIARY", 7),
        "BD3C0Z950" to CurrencyData("BD3C0Z950", "\$MONG", "MongCoin", "\$MONG", "AUXILIARY", 18),
        "BD65FR7K0" to CurrencyData("BD65FR7K0", "ETH", "Ethereum", "Ξ", "AUXILIARY", 18),
        "BDD0QL46R" to CurrencyData("BDD0QL46R", "AVA", "Travala.com Token", "AVA", "AUXILIARY", 18),
        "BDFVNSJD2" to CurrencyData("BDFVNSJD2", "BUSD", "BUSD Token", "BUSD", "AUXILIARY", 18),
        "BDKWZPBQT" to CurrencyData("BDKWZPBQT", "WBTC", "Bitcoin Token", "WBTC", "AUXILIARY", 8),
        "BDPL44QB2" to CurrencyData("BDPL44QB2", "ORBR", "Orbler", "ORBR", "AUXILIARY", 18),
        "BFJ5HHBGK" to CurrencyData("BFJ5HHBGK", "ADKK", "AFREUM DKK", "ADKK", "AUXILIARY", 7),
        "BG1XX5PDZ" to CurrencyData("BG1XX5PDZ", "USDD", "Decentralized USD", "USDD", "AUXILIARY", 6),
        "BG73J7X4V" to CurrencyData("BG73J7X4V", "TSLA", "DAAG Certificat/Tracker Perp TSLA", "TSLA", "AUXILIARY", 8),
    )
}
