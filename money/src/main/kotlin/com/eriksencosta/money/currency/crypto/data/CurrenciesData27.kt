/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData27 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "K4XQ9W83D" to CurrencyData("K4XQ9W83D", "LINK", "Heco-Peg LINK Token", "LINK", "AUXILIARY", 18),
        "K58L7W40M" to CurrencyData("K58L7W40M", "LUSD", "LUSD Stablecoin", "LUSD", "AUXILIARY", 18),
        "K5JJ60FRX" to CurrencyData("K5JJ60FRX", "WBTC", "axlWBTC", "WBTC", "AUXILIARY", 8),
        "K6FFQLQKR" to CurrencyData("K6FFQLQKR", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "K6HM1Z15H" to CurrencyData("K6HM1Z15H", "ORBS", "Orbs", "ORBS", "AUXILIARY", 18),
        "K6JZH3TZ0" to CurrencyData("K6JZH3TZ0", "SSAR", "AFREUM STABLE SAR", "SSAR", "AUXILIARY", 7),
        "K6KL85HSH" to CurrencyData("K6KL85HSH", "GTC", "Gitcoin", "GTC", "AUXILIARY", 18),
        "K71NS42XF" to CurrencyData("K71NS42XF", "AI", "Any Inu", "AI", "AUXILIARY", 18),
        "K71TQ0RHT" to CurrencyData("K71TQ0RHT", "GREBII", "GREENROCK EN/VAR BD OE", "GREBII", "AUXILIARY", 25),
        "K7FLMHMQ0" to CurrencyData("K7FLMHMQ0", "TLOS", "Telos", "TLOS", "AUXILIARY", 18),
        "K88GZL5XP" to CurrencyData("K88GZL5XP", "xALGO", "Wrapped ALGO", "xALGO", "AUXILIARY", 6),
        "K8SHK1VHZ" to CurrencyData("K8SHK1VHZ", "IMX", "Immutable", "IMX", "AUXILIARY", 9),
        "K8WPL9GB8" to CurrencyData("K8WPL9GB8", "AIDR", "AFREUM IDR", "AIDR", "AUXILIARY", 7),
        "K940C51QC" to CurrencyData("K940C51QC", "AAWG", "AFREUM AWG", "AAWG", "AUXILIARY", 7),
        "K9J23ZSX5" to CurrencyData("K9J23ZSX5", "AMKD", "AFREUM MKD", "AMKD", "AUXILIARY", 7),
        "K9NSZWF6J" to CurrencyData("K9NSZWF6J", "OCEAN", "Ocean Token", "OCEAN", "AUXILIARY", 18),
        "KBLNTRFT0" to CurrencyData("KBLNTRFT0", "DOGE", "DOGECOIN X", "Ð", "AUXILIARY", 9),
        "KBMV85XLL" to CurrencyData("KBMV85XLL", "ZIL", "Zilliqa", "ZIL", "NATIVE", 12),
        "KBZ4PV97B" to CurrencyData("KBZ4PV97B", "MC", "Merit Circle", "MC", "AUXILIARY", 18),
        "KCZX82WNQ" to CurrencyData("KCZX82WNQ", "ATHB", "AFREUM THB", "ATHB", "AUXILIARY", 7),
        "KD23BVN3R" to CurrencyData("KD23BVN3R", "DAI", "Dai Stablecoin", "◈", "AUXILIARY", 18),
        "KD9SWNZF1" to CurrencyData("KD9SWNZF1", "BTT", "BitTorrent", "BTT", "AUXILIARY", 18),
        "KDBKZ4L89" to CurrencyData("KDBKZ4L89", "SSSP", "AFREUM STABLE SSP", "SSSP", "AUXILIARY", 7),
        "KDNJ1M5PQ" to CurrencyData("KDNJ1M5PQ", "PNT", "pNetwork Token", "PNT", "AUXILIARY", 18),
        "KDNZDLDMP" to CurrencyData("KDNZDLDMP", "AAMD", "AFREUM AMD", "AAMD", "AUXILIARY", 7),
        "KF0HP1QM7" to CurrencyData("KF0HP1QM7", "DAI", "Dai", "◈", "AUXILIARY", 18),
        "KFHJBQ53J" to CurrencyData("KFHJBQ53J", "USDT", "Tether", "₮", "AUXILIARY", 6),
        "KH705BS8B" to CurrencyData("KH705BS8B", "YGG", "Yield Guild Games Token", "YGG", "AUXILIARY", 8),
        "KH9MT0QWS" to CurrencyData("KH9MT0QWS", "WBTC", "Wrapped BTC", "WBTC", "AUXILIARY", 8),
        "KHJHQNSDZ" to CurrencyData("KHJHQNSDZ", "CAKE", "PancakeSwap Token", "CAKE", "AUXILIARY", 18),
        "KJX2Z12S2" to CurrencyData("KJX2Z12S2", "AVAX", "Avalanche", "AVAX", "AUXILIARY", 18),
        "KKJCF7VK7" to CurrencyData("KKJCF7VK7", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "KLSV179PN" to CurrencyData("KLSV179PN", "vADA", "Venus ADA", "vADA", "AUXILIARY", 8),
        "KMC5RC4XP" to CurrencyData("KMC5RC4XP", "TRX", "TRON", "TRX", "AUXILIARY", 18),
        "KMQC8Q056" to CurrencyData("KMQC8Q056", "RAD", "Radicle", "RAD", "AUXILIARY", 18),
        "KNFCSHLZN" to CurrencyData("KNFCSHLZN", "SCVE", "AFREUM STABLE CVE", "SCVE", "AUXILIARY", 7),
        "KNMMRK019" to CurrencyData("KNMMRK019", "AION", "Aion", "AION", "NATIVE", 8),
        "KNNT25FGR" to CurrencyData("KNNT25FGR", "SEI", "Sei", "SEI", "AUXILIARY", 18),
        "KNPTB87Q5" to CurrencyData("KNPTB87Q5", "DOT", "DOT", "●", "AUXILIARY", 10),
        "KNQXFV3H2" to CurrencyData("KNQXFV3H2", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "KNZ76V15L" to CurrencyData("KNZ76V15L", "WIN", "WINk", "WIN", "AUXILIARY", 18),
        "KP18KNML8" to CurrencyData("KP18KNML8", "MSTR", "DAAG Certificat/Tracker Perp MSTR", "MSTR", "AUXILIARY", 8),
        "KP640Z19W" to CurrencyData("KP640Z19W", "ANGN", "AFREUM NGN", "ANGN", "AUXILIARY", 7),
        "KPFNCGR12" to CurrencyData("KPFNCGR12", "SHRK", "AFREUM STABLE HRK", "SHRK", "AUXILIARY", 7),
        "KPPGRBBS5" to CurrencyData("KPPGRBBS5", "USDC", "USDC", "USDC", "AUXILIARY", 6),
        "KPWDPXN24" to CurrencyData("KPWDPXN24", "TRIBL", "Tribal Token", "TRIBL", "AUXILIARY", 18),
        "KPXS8WST3" to CurrencyData("KPXS8WST3", "LEO", "Bitfinex LEO Token", "LEO", "AUXILIARY", 18),
        "KQXX3C2SQ" to CurrencyData("KQXX3C2SQ", "AI", "Any Inu", "AI", "AUXILIARY", 18),
        "KR4DF4ZJ2" to CurrencyData("KR4DF4ZJ2", "EUROP", "EUROP", "EUROP", "AUXILIARY", 6),
        "KRC74D4T1" to CurrencyData("KRC74D4T1", "NMR", "Numeraire", "NMR", "AUXILIARY", 18),
    )
}
