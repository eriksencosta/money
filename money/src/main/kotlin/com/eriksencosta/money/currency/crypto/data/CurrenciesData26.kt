/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file was auto-generated by running the "generateCryptoCurrenciesDataClasses" Gradle task. Always run the
 * task after a DTI database update.
 */

package com.eriksencosta.money.currency.crypto.data

import com.eriksencosta.money.currency.CurrencyData

// 50 currencies
@Suppress("MagicNumber", "MaxLineLength", "StringLiteralDuplication")
internal class CurrenciesData26 {
    val currencies: Map<String, CurrencyData> get() = mapOf(
        "JP07GJX2P" to CurrencyData("JP07GJX2P", "ARAW", "ARAW", "ARAW", "AUXILIARY", 18),
        "JPH2627LB" to CurrencyData("JPH2627LB", "EVER", "Everscale", "EVER", "NATIVE", 9),
        "JPV57D9VN" to CurrencyData("JPV57D9VN", "ORBS", "Orbs", "ORBS", "AUXILIARY", 18),
        "JQ2KR97JL" to CurrencyData("JQ2KR97JL", "wstETH", "Wrapped liquid staked Ether 2.0 from Mainnet", "wstETH", "AUXILIARY", 18),
        "JQ43814PC" to CurrencyData("JQ43814PC", "XHV", "Haven Protocol", "XHV", "NATIVE", 12),
        "JQ7M3HRVP" to CurrencyData("JQ7M3HRVP", "Amp", "AMP", "Amp", "AUXILIARY", 18),
        "JQT4BM93F" to CurrencyData("JQT4BM93F", "AMP", "Amp", "AMP", "AUXILIARY", 8),
        "JQWT3K2LS" to CurrencyData("JQWT3K2LS", "ALT", "AptosLaunch Token", "ALT", "AUXILIARY", 8),
        "JR59F418X" to CurrencyData("JR59F418X", "AMD", "DAAG Certificat/Tracker Perp AMD", "AMD", "AUXILIARY", 8),
        "JS0NR6QZ9" to CurrencyData("JS0NR6QZ9", "USDP", "USDP Stablecoin", "USDP", "AUXILIARY", 18),
        "JS26SX2DH" to CurrencyData("JS26SX2DH", "GTC", "Game.com", "GTC", "AUXILIARY", 18),
        "JS4511HVX" to CurrencyData("JS4511HVX", "DAI", "Dai Stablecoin", "◈", "AUXILIARY", 18),
        "JSB445WQN" to CurrencyData("JSB445WQN", "FLOKI", "FLOKI", "FLOKI", "AUXILIARY", 9),
        "JT0058ZQG" to CurrencyData("JT0058ZQG", "DODO", "DODO bird", "DODO", "AUXILIARY", 18),
        "JT74FJ4JX" to CurrencyData("JT74FJ4JX", "BCD", "Bitcoin Diamond", "BCD", "NATIVE", 7),
        "JTBF802B0" to CurrencyData("JTBF802B0", "LDO", "Lido DAO Token", "LDO", "AUXILIARY", 8),
        "JTKDVMR6S" to CurrencyData("JTKDVMR6S", "USDC", "USD Coin", "USDC", "AUXILIARY", 6),
        "JVHX3MS60" to CurrencyData("JVHX3MS60", "INJ", "Injective", "INJ", "AUXILIARY", 18),
        "JVMWS68W1" to CurrencyData("JVMWS68W1", "ATOM", "Cosmos", "ATOM", "AUXILIARY", 6),
        "JVR2270H1" to CurrencyData("JVR2270H1", "AVABBC", "Avalanche ABBC", "AVABBC", "AUXILIARY", 8),
        "JVTWMTRJ7" to CurrencyData("JVTWMTRJ7", "HK0000895216", "HKSAR GOVT/4.05 NT 20240216 UNSEC", "HK0000895216", "AUXILIARY", 0),
        "JVVVH6K29" to CurrencyData("JVVVH6K29", "TUSD", "TrueUSD", "TUSD", "AUXILIARY", 8),
        "JW3C16B06" to CurrencyData("JW3C16B06", "ANZD", "AFREUM NZD", "ANZD", "AUXILIARY", 7),
        "JW7SD9THP" to CurrencyData("JW7SD9THP", "AR", "Arweave", "AR", "NATIVE", 12),
        "JWF49CSB4" to CurrencyData("JWF49CSB4", "RSR", "Reserve Rights", "RSR", "AUXILIARY", 18),
        "JWKGMM7VR" to CurrencyData("JWKGMM7VR", "TRY", "TRYfinance", "TRY", "AUXILIARY", 18),
        "JWSTTKP1H" to CurrencyData("JWSTTKP1H", "REQ", "Request Token", "REQ", "AUXILIARY", 18),
        "JXG6Q514K" to CurrencyData("JXG6Q514K", "xDAI", "Gnosis Chain", "xDAI", "NATIVE", 18),
        "JXWZ7F8HD" to CurrencyData("JXWZ7F8HD", "CCD", "Concordium", "CCD", "NATIVE", 6),
        "JZBH0W7W0" to CurrencyData("JZBH0W7W0", "LEND", "EthLend Token", "LEND", "AUXILIARY", 18),
        "JZSN74VP9" to CurrencyData("JZSN74VP9", "ARIX", "Arix", "ARIX", "AUXILIARY", 18),
        "K0C0VSTL8" to CurrencyData("K0C0VSTL8", "SID", "SIDO IMMO/GENS 1000", "SID", "AUXILIARY", 0),
        "K0NPSRZX1" to CurrencyData("K0NPSRZX1", "SNX", "Heco-Peg SNX Token", "SNX", "AUXILIARY", 18),
        "K18HWCDZ0" to CurrencyData("K18HWCDZ0", "Seele", "Seele Token", "Seele", "AUXILIARY", 18),
        "K1C5K0V1S" to CurrencyData("K1C5K0V1S", "BSOL", "BlazeStake Staked SOL", "BSOL", "AUXILIARY", 9),
        "K1C66DC54" to CurrencyData("K1C66DC54", "BUSD", "BUSD Token", "BUSD", "AUXILIARY", 18),
        "K1KRW1TFQ" to CurrencyData("K1KRW1TFQ", "MNT", "Mantle", "MNT", "AUXILIARY", 18),
        "K1NS41N51" to CurrencyData("K1NS41N51", "BTC", "Bitcoin", "₿", "AUXILIARY", 11),
        "K2D6M96TP" to CurrencyData("K2D6M96TP", "SGTQ", "AFREUM STABLE GTQ", "SGTQ", "AUXILIARY", 7),
        "K2PB48DFV" to CurrencyData("K2PB48DFV", "PLA", "PlayDapp Token (PoS)", "PLA", "AUXILIARY", 18),
        "K2PK4NJ4G" to CurrencyData("K2PK4NJ4G", "BNB", "Binance Coin", "BNB", "AUXILIARY", 8),
        "K2RWK5VN2" to CurrencyData("K2RWK5VN2", "ALSL", "AFREUM LSL", "ALSL", "AUXILIARY", 7),
        "K2XG5TQ7W" to CurrencyData("K2XG5TQ7W", "REN", "Republic Token on xDai", "REN", "AUXILIARY", 18),
        "K36TZ513W" to CurrencyData("K36TZ513W", "BLZ", "Bluzelle Token", "BLZ", "AUXILIARY", 18),
        "K3BB03HSP" to CurrencyData("K3BB03HSP", "MBOX", "Mobox", "MBOX", "AUXILIARY", 18),
        "K3HQGGZV9" to CurrencyData("K3HQGGZV9", "QI", "BENQI", "QI", "AUXILIARY", 18),
        "K40N9P386" to CurrencyData("K40N9P386", "XCH", "Chia", "XCH", "NATIVE", 12),
        "K44NX5WJ7" to CurrencyData("K44NX5WJ7", "pCKB", "Godwoken", "pCKB", "NATIVE", 5),
        "K4JGJB9JS" to CurrencyData("K4JGJB9JS", "WETH", "Wrapped Ether on xDai", "WETH", "AUXILIARY", 18),
        "K4QB4C4MJ" to CurrencyData("K4QB4C4MJ", "SKZT", "AFREUM STABLE KZT", "SKZT", "AUXILIARY", 7),
    )
}
