/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.eriksencosta.money.gradle

import com.eriksencosta.money.gradle.currency.CurrenciesDocumentationGenerator
import com.eriksencosta.money.gradle.currency.ICUCurrencies
import com.eriksencosta.money.gradle.currency.SourceCurrencies

private object CirculatingCurrenciesDocumentationGenerator : CurrenciesDocumentationGenerator() {
    override fun gradleTask(): String = "generateCirculatingCurrenciesDocumentation"
    override fun currenciesSource(): SourceCurrencies = ICUCurrencies
    override fun fileName(): String = "circulating-currencies.md"
    override fun title(): String = "Circulating currencies"
    override fun secondaryCodeName(): String = "Numeric code"
    override fun fileNotice() = """
        |<!--
        |This file was auto-generated by running the "${gradleTask()}" Gradle task. Always run the
        |task after upgrading the ICU library.
        |-->
        |
    """.trimMargin()

    override fun contentsTemplate(): String = """
        |
        |The library supports standardized cryptocurrencies (ISO 4217), de facto (e.g., `CNH` for Hong Kong's Renmibi, and historical
        |currencies). To create a circulating currency, use the `Currency.of()` method, passing its three-letter code:
        |
        |```kotlin
        |val usDollar = Currency of "USD"
        |val euro = Currency of "EUR"
        |val yen = Currency of "JPY"
        |```
        |
        |Alternatively you can create a circulating currency using its ISO 4217 numeric code:
        |
        |```kotlin
        |val usDollar = Currency of "840"
        |val euro = Currency of "978"
        |val yen = Currency of "392"
        |```
        |
        |However, not all currencies can be created using the numeric codes as they aren't unique. Check in the
        |[Supported currencies](#supported-currencies) table if the numeric code can be used to create the corresponding
        |currency object.
        |
        |Each circulating currency has additional details such as:
        |
        |* Name: the name of the currency (e.g., US Dollar and Euro)
        |* Symbol: the official graphical symbol of the currency (e.g., $ for US Dollar and € for Euro)
        |* Type: the type of the currency. Possible values:
        |  * Tender: a legally recognized currency within a given political jurisdiction
        |  * Other: other forms of currencies like supranational currencies and precious metals
        |  * Historical: currencies used in the past
        |* Minor units: the number of decimal places used by the currency (e.g., 2 for US Dollar and 0 for Japanese Yen)
        |
        |
        |## Source data
        |
        |The [Unicode Common Locale Data Repository](https://cldr.unicode.org/) (CLDR) is used as source for the circulating
        |currencies data through the [International Components for Unicode](https://unicode-org.github.io/icu/userguide/icu4j/)
        |(ICU) library.
        |
        |The CLDR dataset has both the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currencies as well de facto and historical
        |currencies.
        |
        |
        |## Supported currencies
        |
        |There are @@NUMBER_OF_CURRENCIES@@ circulating currencies available as summarized in the following table.
        |
        |A numeric code marked with ✅ may be used to create a circulating currency object.
        |
    """.trimMargin()

    @JvmStatic
    fun main(args: Array<String>) = generateFile(args[0])
}
