/*
 * This file is part of the Money package.
 *
 * Copyright (c) Eriksen Costa <eriksencosta@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.eriksencosta.money.gradle

import com.eriksencosta.money.gradle.currency.CurrenciesDocumentationGenerator
import com.eriksencosta.money.gradle.currency.DTIFCurrencies
import com.eriksencosta.money.gradle.currency.SourceCurrencies

private object CryptoCurrenciesDocumentationGenerator : CurrenciesDocumentationGenerator() {
    override fun gradleTask(): String = "generateCryptoCurrenciesDocumentation"
    override fun currenciesSource(): SourceCurrencies = DTIFCurrencies
    override fun fileName(): String = "cryptocurrencies.md"
    override fun title(): String = "Cryptocurrencies"
    override fun secondaryCodeName(): String = "Short name"
    override fun fileNotice() = """
        |<!--
        |This file was auto-generated by running the "${gradleTask()}" Gradle task. Always run the
        |task after a DTI database update.
        |-->
        |
    """.trimMargin()

    override fun contentsTemplate(): String = """
        |
        |The library supports standardized cryptocurrencies (ISO 24165-1). To create a cryptocurrency, use the
        |`Currency.of()` method, passing its 9-alphanumerical code:
        |
        |```kotlin
        |val bitcoin = Currency of "4H95J0R2X"
        |val ethereum = Currency of "X9J9K872S"
        |```
        |
        |Alternatively you can create a circulating currency using its short name:
        |
        |```kotlin
        |val bitcoin = Currency of "BTC"
        |val ethereum = Currency of "ETH"
        |```
        |
        |However, not all currencies can be created using the short names as they aren't unique. Check in the
        |[Supported currencies](#supported-currencies) table if the short name can be used to create the corresponding
        |currency object.
        |
        |Each cryptocurrency has additional details such as:
        |
        |* Name: the name of the currency (e.g., Bitcoin and Ethereum)
        |* Symbol: the official graphical symbol of the currency (e.g., ₿ for Bitcoin and Ξ for Ethereum)
        |* Type: the type of the currency. Possible values:
        |  * Auxiliary: cryptocurrency created as an application on a distributed ledger (e.g., ERC-20 tokens)
        |  * Distributed: cryptocurrency of a distributed ledger
        |  * Fungible: set of cryptocurrencies that are not technically compatible but are considered equivalent
        |  * Native: cryptocurrency with a privileged position in a distributed ledger technology protocol (e.g., Bitcoin or Ethereum)
        |  * Provisional: cryptocurrency being provisioned in the Digital Token Identifier Foundation's database
        |  * Historical: cryptocurrencies excluded from the Digital Token Identifier Foundation's database
        |* Minor units: the number of decimal places used by the currency (e.g., 8 for Bitcoin and 18 for Ethereum)
        |
        |
        |## Source data
        |
        |The [Digital Token Identifier Foundation](https://dtif.org/) (DTI) database is used as source for the cryptocurrencies
        |data. The Digital Token Identifier is a 9-alphanumerical [ISO 24165-1](https://www.iso.org/standard/80601.html)
        |compliant code assigned by the Foundation.
        |
        |
        |## Supported currencies
        |
        |There are @@NUMBER_OF_CURRENCIES@@ cryptocurrencies available as summarized in the following table.
        |
        |A short name marked with ✅ may be used to create a cryptocurrency object.
        |
    """.trimMargin()

    @JvmStatic
    fun main(args: Array<String>) = generateFile(args[0])
}
